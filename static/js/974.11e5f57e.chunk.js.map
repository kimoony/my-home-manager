{"version":3,"file":"static/js/974.11e5f57e.chunk.js","mappings":"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","sources":["atoms.js","components/modals/sign/Auth.js","components/modals/sign/SignForm.js","routes/Sign.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const modalState = atom({\n  key: \"modalState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React from \"react\";\nimport { authService } from \"../../../firebase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Google = styled.button`\n  background-color: #d04f4b;\n  color: #fff;\n  font-size: 1.2rem;\n  height: 2rem;\n  border: none;\n  border-radius: 5px;\n  width: 100%;\n  cursor: pointer;\n\n  :hover {\n    background-color: #ee555b;\n  }\n`;\n\nlibrary.add(fab);\n\nfunction Auth({ closeModal, setIsLogIn }) {\n  const onSocialClicik = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    }\n    //  else if (name === \"github\") {\n    //   provider = new GithubAuthProvider();\n    // }\n    const user = await signInWithPopup(authService, provider);\n    console.log(user);\n    closeModal();\n    setIsLogIn(true);\n    alert(\"로그인 완료!\");\n  };\n\n  return (\n    <Wrapper>\n      <Google>\n        <buttGoogleon name=\"google\" onClick={onSocialClicik}>\n          <FontAwesomeIcon icon={[\"fab\", \"google\"]} /> Google 로그인\n        </buttGoogleon>\n      </Google>\n    </Wrapper>\n  );\n}\n\nexport default Auth;\n","import React, { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { authService } from \"../../../firebase\";\nimport {\n  browserSessionPersistence,\n  createUserWithEmailAndPassword,\n  setPersistence,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport Auth from \"./Auth\";\nimport { useRecoilState } from \"recoil\";\nimport { loginState, userState } from \"atoms\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\n// console.log(authService)\n\nfunction SignForm() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const setIsLogIn = useRecoilState(loginState);\n  const [newUser, setNewUser] = useRecoilState(userState);\n\n  const [errorFromSubmit, setErrorFromSubmit] = useState(\"\");\n  const password = useRef();\n  password.current = watch(\"password\");\n\n  const navigate = useNavigate();\n\n  const toggleSign = () => setNewUser((prev) => !prev);\n\n  const goBack = (e) => {\n    e.preventDefault();\n    navigate(\"/\");\n  };\n\n  const onSubmit = async (data) => {\n    console.log(data);\n    let user;\n    try {\n      if (newUser) {\n        user = await createUserWithEmailAndPassword(\n          authService,\n          data.email,\n          data.password\n        );\n        setNewUser(false);\n      } else {\n        setPersistence(authService, browserSessionPersistence);\n        user = await signInWithEmailAndPassword(\n          authService,\n          data.email,\n          data.password\n        );\n        setIsLogIn(true);\n        alert(\"로그인 완료!\");\n        navigate(\"/\");\n      }\n      console.log(user);\n    } catch (error) {\n      setErrorFromSubmit(error.message);\n    }\n  };\n\n  return (\n    <>\n      <FormBox>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <BackBtn type=\"button\" onClick={goBack}>\n            <BiArrowBack />\n          </BackBtn>\n          <h1>{newUser ? \"회원가입\" : \"로그인\"}</h1>\n          <InputBox>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"이메일\"\n              {...register(\"email\", {\n                required: true,\n                pattern: /^\\S+@\\S+$/i,\n              })}\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <p>이메일은 반드시 입력해야합니다.</p>\n            )}\n            {errors.email && errors.email.type === \"pattern\" && (\n              <p>이메일이 형식에 맞지 않습니다.</p>\n            )}\n            <Input\n              name=\"password\"\n              type=\"password\"\n              {...register(\"password\", { required: true, minLength: 8 })}\n              minLength={8}\n              placeholder=\"비밀번호 8자리 이상\"\n            />\n            {errors.password && errors.password.type === \"required\" && (\n              <p>비밀번호는 반드시 입력해야합니다.</p>\n            )}\n            {errors.password && errors.password.type === \"minLength\" && (\n              <p>비밀번호는 6글자 이상이여야 합니다.</p>\n            )}\n            {newUser ? (\n              <Input\n                name=\"passwordConfirm\"\n                type=\"password\"\n                {...register(\"passwordConfirm\", {\n                  required: true,\n                  validate: (value) => value === password.current,\n                })}\n                placeholder=\"비밀번호를 재입력\"\n              />\n            ) : null}\n            {errors.passwordConfirm &&\n              errors.passwordConfirm.type === \"required\" && (\n                <p>비밀번호 확인은 반드시 입력해야합니다.</p>\n              )}\n            {errors.passwordConfirm &&\n              errors.passwordConfirm.type === \"validate\" && (\n                <p>비밀번호가 일치하지 않습니다.</p>\n              )}\n            {errorFromSubmit && <p>{errorFromSubmit}</p>}\n            <Input type=\"submit\" value={newUser ? \"회원가입\" : \"로그인\"} />\n          </InputBox>\n        </Form>\n        <ToggleBtn onClick={toggleSign}>\n          {newUser ? \"로그인 하러 가기..\" : \"회원가입 하러 가기..\"}\n        </ToggleBtn>\n        <Auth setIsLogIn={setIsLogIn} />\n      </FormBox>\n    </>\n  );\n}\n\nexport default SignForm;\n\nconst FormBox = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 40%;\n  transform: translate(-50%, -50%);\n  max-height: 80%;\n  width: 20rem;\n  padding: 16px;\n  text-align: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BackBtn = styled.button`\n  border: none;\n  background-color: #fff;\n  border-radius: 5px;\n  align-self: flex-start;\n  font-size: 18px;\n  cursor: pointer;\n\n  :hover {\n    font-weight: bold;\n    color: #616365;\n  }\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  span {\n    align-self: flex-start;\n    color: red;\n    margin: 5px 0px;\n  }\n`;\n\nconst Input = styled.input`\n  margin-bottom: 10px;\n  padding: 0 5px;\n  height: 1.5rem;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  border: 1px solid #616365;\n\n  :last-child {\n    border: none;\n    border-radius: 5px;\n    padding: 5px 0;\n    height: 2rem;\n    background-color: #616365;\n    color: #fff;\n    cursor: pointer;\n    margin-top: 5px;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n\nconst ToggleBtn = styled.div`\n  margin: 10px 0;\n  color: #667078;\n  cursor: pointer;\n\n  :hover {\n    font-weight: bold;\n  }\n`;\n","import SignForm from \"components/modals/sign/SignForm\";\nimport React from \"react\";\n\nfunction Sign() {\n  return (\n    <div>\n      <SignForm />\n    </div>\n  );\n}\n\nexport default Sign;\n"],"names":["loginState","atom","key","default","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","Wrapper","styled","Google","library","fab","closeModal","setIsLogIn","onSocialClicik","e","target","name","provider","GoogleAuthProvider","signInWithPopup","authService","user","console","log","alert","onClick","icon","useForm","register","handleSubmit","watch","errors","formState","useRecoilState","newUser","setNewUser","useState","errorFromSubmit","setErrorFromSubmit","password","useRef","current","navigate","useNavigate","onSubmit","data","createUserWithEmailAndPassword","email","setPersistence","browserSessionPersistence","signInWithEmailAndPassword","message","FormBox","Form","BackBtn","type","preventDefault","InputBox","Input","placeholder","required","pattern","minLength","validate","passwordConfirm","ToggleBtn","prev"],"sourceRoot":""}