{"version":3,"file":"static/js/367.cee82940.chunk.js","mappings":"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","sources":["atoms.js","components/post/ItemImage.js","styles/ItemInputForm.style.js","components/form/ItemInputForm.js","styles/ItemPost.style.js","routes/ItemPost.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const modalState = atom({\n  key: \"modalState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: true,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    category: \"\",\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    purchaseMethod: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    category: \"\",\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n","\n\nfunction ItemImage({ setFile, percent }) {\n\n  // Handles input change event and updates state\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  }\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"image/*\" onChange={handleChange} />\n      <span>{percent} \"% 완료\"</span>\n    </div>\n  );\n}\n\nexport default ItemImage\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 50vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 10px 0px;\n`;\n\nexport const LeftContainer = styled.div`\n  \n`\nexport const RightContainer = styled.div`\n`\n\nexport const Image = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const Ctag = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const ItemName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const NumInput = styled.div`\n  display: flex;\n  input {\n    width: 40px;\n    text-align: center;\n  }\n`;\n\nexport const StorageLocation = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const Purchase = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\n\n\n","import React, { useRef, useState } from \"react\";\nimport ItemImage from \"../post/ItemImage\";\nimport {\n  Container,\n  LeftContainer,\n  RightContainer,\n  Image,\n  Ctag,\n  ItemName,\n  Quantity,\n  NumInput,\n  StorageLocation,\n  Purchase,\n  Description,\n} from \"styles/ItemInputForm.style\";\nimport { itemPostState, quantityState } from \"atoms\";\nimport { useRecoilState } from \"recoil\";\n\nfunction ItemInputList({ register, errors, percent, setFile }) {\n  // 카테고리\n  const [newCateg, setNewCateg] = useState(\"\");\n  const [viewInput, setViewInput] = useState(false);\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const onClickAdd = () => {\n    setViewInput(true);\n  };\n  const COptions = [\n    { key: 0, value: \"선택\" },\n    { key: 1, value: \"생활용품\" },\n    { key: 2, value: \"주방용품\" },\n    { key: 3, value: \"욕실용품\" },\n    { key: 4, value: \"차량용품\" },\n  ];\n\n  const POptions = [\n    { key: 0, value: \"선택\" },\n    { key: 1, value: \"온라인\" },\n    { key: 2, value: \"오프라인\" },\n  ];\n\n  const changeValue = (e) => {\n    setItemsValue({\n      ...itemsValue,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const addCateg = (e) => {\n    setNewCateg(e.target.value);\n  };\n\n  const addQuantity = () => {\n    setQuantity(() => Number(quantity + 1));\n  };\n  const minusQuantity = () => {\n    if (quantity > 0) {\n      setQuantity(() => Number(quantity - 1));\n    }\n  };\n\n  return (\n    <Container>\n      <Image>\n        <ItemImage percent={percent} setFile={setFile} />\n      </Image>\n      <Ctag>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <label>카테고리 </label>\n          {viewInput ? null : (\n            <input type=\"button\" value=\"+\" onClick={onClickAdd} />\n          )}\n          {viewInput ? (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <input type=\"text\" onChange={changeValue} name=\"newCategory\" />\n              <button type=\"button\">추가</button>\n              <button type=\"button\" onClick={() => setViewInput(false)}>\n                취소\n              </button>\n            </div>\n          ) : null}\n        </div>\n        <select\n          name=\"category\"\n          value={itemsValue.category}\n          onChange={changeValue}\n        >\n          {COptions.map((cOption) => (\n            <option key={cOption.key} value={cOption.value}>\n              {cOption.value}\n            </option>\n          ))}\n        </select>\n      </Ctag>\n      <ItemName>\n        <label>물품명 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          name=\"products\"\n          value={itemsValue.products}\n        />\n      </ItemName>\n      <Quantity>\n        <label>수량 </label>\n        <NumInput>\n          <button type=\"button\" onClick={minusQuantity}>\n            -\n          </button>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={changeValue}\n            name=\"quantity\"\n          />\n          <button type=\"button\" onClick={addQuantity}>\n            +\n          </button>\n        </NumInput>\n      </Quantity>\n      <StorageLocation>\n        <label>보관위치 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.location}\n          name=\"location\"\n        />\n      </StorageLocation>\n      <Purchase>\n        <label>구매처/구매방법 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.purchase}\n          name=\"purchase\"\n        />\n        <select onChange={changeValue} name=\"purchaseMethod\">\n          {POptions.map((pOption) => (\n            <option key={pOption.key} value={pOption.value}>\n              {pOption.value}\n            </option>\n          ))}\n        </select>\n      </Purchase>\n      <Description>\n        <label>설명 </label>\n        <textarea\n          cols=\"30\"\n          rows=\"10\"\n          onChange={changeValue}\n          value={itemsValue.descript}\n          name=\"descript\"\n        />\n      </Description>\n    </Container>\n  );\n}\n\nexport default ItemInputList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  width: 90vw;\n  height: 90vh;\n  margin-top: 20px;\n  border: 1px solid blue;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport const Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport const Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n`;\n\n\nexport const PostBtn = styled.input`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #2986F5;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const GoBack = styled.button`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #F9567A;\n  color: #fff;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { db, storage } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport ItemInputForm from \"components/form/ItemInputForm\";\nimport { useRecoilValue } from \"recoil\";\nimport { itemPostState, quantityState } from \"../atoms\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport {\n  Wrapper,\n  Form,\n  Header,\n  GoBack,\n  Main,\n  Footer,\n  PostBtn,\n} from \"styles/ItemPost.style\";\n\nfunction ItemPost({ userObj }) {\n  // 이미지\n  const [file, setFile] = useState(\"\");\n  const [percent, setPercent] = useState(0);\n  const itemsValue = useRecoilValue(itemPostState);\n  const quantity = useRecoilValue(quantityState);\n  console.log(itemsValue);\n  console.log(quantity);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const navigate = useNavigate();\n\n  const onSubmit = async () => {\n    try {\n      const docRef = await addDoc(collection(db, \"items\"), {\n        creatorId: userObj.uid,\n        category: itemsValue.category,\n        products: itemsValue.products,\n        quantity: quantity,\n        storageLocation: itemsValue.location,\n        purchase: itemsValue.purchase,\n        purchaseMethod: itemsValue.purchaseMethod,\n        descript: itemsValue.descript,\n        createDate: moment().format(\"YYYY-MM-DD\"),\n      });\n      console.log(docRef.id);\n\n      if (!file) {\n        alert(\"Please choose a file first!\");\n        // return;\n      }\n\n      const storageRef = ref(storage, `/files/${file.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const percent = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n\n          // update progress\n          setPercent(percent);\n        },\n        (err) => console.log(err),\n        () => {\n          // download url\n          getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n            console.log(url);\n          });\n        }\n      );\n\n      if (percent === 100) {\n        alert(\"이미지 업로드 완료\");\n      }\n\n      navigate(\"/\");\n      alert(\"등록이 완료되었습니다.\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Header>\n          <h1>물품 등록하기</h1>\n        </Header>\n        <Main>\n          <ItemInputForm\n            register={register}\n            errors={errors}\n            percent={percent}\n            setFile={setFile}\n          />\n        </Main>\n        <Footer>\n          <Link to=\"/\">\n            <GoBack>뒤로가기</GoBack>\n          </Link>\n          <PostBtn type=\"submit\" value=\"등록하기\" />\n        </Footer>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ItemPost;\n"],"names":["modalState","atom","key","default","loginState","userState","itemPostState","category","products","location","purchase","purchaseMethod","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","setFile","percent","type","accept","onChange","event","target","files","Container","styled","Image","Ctag","ItemName","Quantity","NumInput","StorageLocation","Purchase","Description","register","errors","useState","viewInput","setViewInput","useRecoilState","itemsValue","setItemsValue","quantity","setQuantity","changeValue","e","name","value","style","display","alignItems","onClick","map","cOption","Number","pOption","cols","rows","Wrapper","Form","Header","Main","Footer","PostBtn","GoBack","userObj","file","setPercent","useRecoilValue","console","log","useForm","handleSubmit","formState","navigate","useNavigate","onSubmit","addDoc","collection","db","creatorId","uid","storageLocation","createDate","moment","format","docRef","id","alert","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","snapshot","Math","round","bytesTransferred","totalBytes","err","getDownloadURL","then","url","error","message","ItemInputForm","to"],"sourceRoot":""}