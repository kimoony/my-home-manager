{"version":3,"file":"static/js/774.e2fd7a6a.chunk.js","mappings":"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","sources":["atoms.js","components/content/EditItem.js","components/content/Item.js","routes/ItemDetail.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const modalState = atom({\n  key: \"modalState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React, { useEffect } from \"react\";\nimport { itemCategoryState, methodCategoryState } from \"atoms\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\nfunction EditItem({\n  item,\n  setItem,\n  itemCategValue,\n  onChangeICateg,\n  methodCategValu,\n  onChangeMCateg,\n}) {\n  const [itemCategory, setItemCategory] = useRecoilState(itemCategoryState);\n  const methodCategory = useRecoilValue(methodCategoryState);\n\n  console.log(methodCategory);\n\n  useEffect(() => {\n    const getItemCategData = async () => {\n      const data = await getDocs(collection(db, \"itemCateg\"));\n      setItemCategory(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemCategData();\n  }, [setItemCategory, itemCategory]);\n\n  console.log(itemCategory);\n\n  const onChangeValue = (e) => {\n    setItem({\n      ...item,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <h1>수정페이지</h1>\n      <div>\n        <label>물품명: </label>\n        <input name=\"products\" value={item.products} onChange={onChangeValue} />\n      </div>\n      <div>\n        <label>카테고리: </label>\n        <select value={itemCategValue} onChange={onChangeICateg}>\n          {itemCategory.map((categ) => (\n            <option value={categ.category}>{categ.category}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label>수량: </label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          value={item.quantity}\n          onChange={onChangeValue}\n        />\n      </div>\n      <div>\n        <label>보관위치: </label>\n        <input\n          name=\"storageLocation\"\n          value={item.storageLocation}\n          onChange={onChangeValue}\n        />\n      </div>\n      <div>\n        <label>구매처: </label>\n        <input name=\"purchase\" value={item.purchase} onChange={onChangeValue} />\n      </div>\n      <div>\n        <label>구매방법: </label>\n        <select value={methodCategValu} onChange={onChangeMCateg}>\n          {methodCategory.map((method) => (\n            <option value={method.value}>{method.value}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label>설명: </label>\n        <textarea\n          name=\"descript\"\n          value={item.descript}\n          onChange={onChangeValue}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default EditItem;\n","import React, { useState } from \"react\";\nimport EditItem from \"./EditItem\";\n\nfunction CurrentItem({\n  item,\n  setItem,\n  isEdit,\n  itemCategValue,\n  methodCategValue,\n  onChangeICateg,\n  onChangeMCateg,\n}) {\n  return (\n    <div>\n      {isEdit === false ? (\n        <>\n          <img src={item.productsImg} alt=\"\" />\n          <h1>{item.products}</h1>\n          <p>등록시간: {item.createDate}</p>\n          <div>\n            <label>카테고리: </label>\n            <span>{item.category}</span>\n          </div>\n          <div>\n            <label>수량: </label>\n            <span>{item.quantity}</span>\n          </div>\n          <div>\n            <label>보관위치: </label>\n            <span>{item.storageLocation}</span>\n          </div>\n          <div>\n            <label>구매처/구매방법: </label>\n            <span>\n              {item.purchase} / {item.purchaseMethod}\n            </span>\n          </div>\n          <div>\n            <label>설명: </label>\n            <span>{item.descript}</span>\n          </div>\n        </>\n      ) : (\n        <EditItem\n          item={item}\n          setItem={setItem}\n          itemCategValue={itemCategValue}\n          onChangeICateg={onChangeICateg}\n          methodCategValue={methodCategValue}\n          onChangeMCateg={onChangeMCateg}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CurrentItem;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport Item from \"components/content/Item\";\nimport { getItemsState } from \"atoms\";\nimport { useRecoilState } from \"recoil\";\n\nfunction ItemDetailed() {\n  const [targetId, setTargetId] = useState({});\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const [itemCategValue, setItemCategValue] = useState(targetId.category);\n  const [methodCategValue, setMethodCategValue] = useState(\n    targetId.purchaseMethod\n  );\n\n  const onChangeICateg = (e) => {\n    setItemCategValue(e.target.value);\n  };\n  const onChangeMCateg = (e) => {\n    setMethodCategValue(e.target.value);\n  };\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (getItems.length > 0) {\n      const targetItem = getItems.find((item) => item.id === id);\n      console.log(targetItem);\n      if (targetItem) {\n        setTargetId(targetItem);\n      }\n    }\n  }, [getItems, id]);\n\n  const onUpdateItem = async (e) => {\n    e.preventDefault();\n    const editRef = doc(db, \"items\", targetId.id);\n    try {\n      await updateDoc(editRef, {\n        ...targetId,\n        category: itemCategValue,\n        purchaseMethod: methodCategValue,\n      });\n      console.log(editRef.id);\n\n      setIsEdit(false);\n      alert(\"수정이 완료되었습니다.\");\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      console.log(\"End\");\n    }\n  };\n\n  const onDeleteItem = async (id) => {\n    const delItem = doc(db, \"items\", targetId.id);\n    await deleteDoc(delItem);\n    setGetItems(getItems.filter((item) => item.id !== targetId.id));\n    alert(\"삭제완료!\");\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <button>←</button>\n      </Link>\n      <Item\n        item={targetId}\n        setItem={setTargetId}\n        isEdit={isEdit}\n        setIsEdit={setIsEdit}\n        itemCategValue={itemCategValue}\n        methodCategValue={methodCategValue}\n        onChangeICateg={onChangeICateg}\n        onChangeMCateg={onChangeMCateg}\n      />\n      {isEdit === false ? (\n        <button onClick={() => setIsEdit(true)}>수정</button>\n      ) : (\n        <button onClick={onUpdateItem}>완료</button>\n      )}\n      <button onClick={onDeleteItem}>삭제</button>\n    </div>\n  );\n}\n\nexport default ItemDetailed;\n"],"names":["loginState","atom","key","default","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","item","setItem","itemCategValue","onChangeICateg","methodCategValu","onChangeMCateg","useRecoilState","itemCategory","setItemCategory","methodCategory","useRecoilValue","console","log","useEffect","getItemCategData","getDocs","collection","db","data","docs","map","doc","id","onChangeValue","e","target","name","onChange","categ","category","type","quantity","storageLocation","method","isEdit","methodCategValue","src","productsImg","alt","createDate","purchaseMethod","useState","targetId","setTargetId","getItems","setGetItems","setIsEdit","setItemCategValue","setMethodCategValue","useParams","navigate","useNavigate","length","targetItem","find","onUpdateItem","preventDefault","editRef","updateDoc","alert","error","message","onDeleteItem","delItem","deleteDoc","filter","to","Item","onClick"],"sourceRoot":""}