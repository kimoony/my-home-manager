{"version":3,"file":"static/js/703.f5647cd4.chunk.js","mappings":"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","sources":["atoms.js","components/post/ItemImage.js","components/AddNewCateg.js","styles/ItemInputForm.style.js","components/form/postInput/ItemInputForm.js","routes/ItemPost.js","styles/ItemPost.style.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const editState = atom({\n  key: \"editState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React from \"react\";\n\nfunction ItemImage({ setFile, percent, image }) {\n  // const [isEdit, setIsEdit] = useRecoilState(editState);\n\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"image/*\" onChange={handleChange} />\n\n      <span>{percent} \"% 완료\"</span>\n    </div>\n  );\n}\n\nexport default ItemImage;\n","import React, { useState } from \"react\";\n\nfunction AddNewCateg({\n  viewInput,\n  setViewInput,\n  itemCategory,\n  addCateg,\n  removeCateg,\n  setNewCateg,\n}) {\n  const [showCateg, setShowCateg] = useState(false);\n\n  const onClickAdd = () => {\n    setViewInput(true);\n  };\n\n  const onChangeCateg = (e) => {\n    setNewCateg(e.target.value);\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <label>카테고리 </label>\n      {viewInput ? null : (\n        <>\n          <input type=\"button\" value=\"+\" onClick={onClickAdd} />\n          <input\n            type=\"button\"\n            value=\"-\"\n            onClick={() => setShowCateg(!showCateg)}\n          />\n        </>\n      )}\n      {viewInput ? (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input type=\"text\" onChange={onChangeCateg} name=\"newCategory\" />\n          <button type=\"button\" onClick={addCateg}>\n            추가\n          </button>\n          <button type=\"button\" onClick={() => setViewInput(false)}>\n            취소\n          </button>\n        </div>\n      ) : showCateg ? (\n        itemCategory.map((categ) => (\n          <div key={categ.id}>\n            {categ.category} <span onClick={removeCateg}>x</span>\n          </div>\n        ))\n      ) : null}\n    </div>\n  );\n}\n\nexport default AddNewCateg;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 50vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 10px 0px;\n`;\n\nexport const LeftContainer = styled.div`\n  \n`\nexport const RightContainer = styled.div`\n`\n\nexport const Image = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const Ctag = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const ItemName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\nexport const NumInput = styled.div`\n  display: flex;\n  input {\n    width: 40px;\n    text-align: center;\n  }\n`;\n\nexport const StorageLocation = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const Purchase = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  label {\n    margin-right: 10px;\n  }\n`;\n\n\n\n","import React, { useState } from \"react\";\nimport ItemImage from \"../../post/ItemImage\";\nimport AddNewCateg from \"../../AddNewCateg\";\nimport {\n  Container,\n  Image,\n  Ctag,\n  ItemName,\n  Quantity,\n  NumInput,\n  StorageLocation,\n  Purchase,\n  Description,\n} from \"styles/ItemInputForm.style\";\nimport {\n  itemPostState,\n  quantityState,\n  itemCategoryState,\n  methodCategoryState,\n} from \"atoms\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { db } from \"../../../firebase\";\nimport { useEffect } from \"react\";\n\nfunction ItemInputList({\n  register,\n  errors,\n  percent,\n  setFile,\n  userObj,\n  categoryValue,\n  setCatagoryValue,\n  methodValue,\n  setMethodValue,\n}) {\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [viewInput, setViewInput] = useState(false);\n  const [newCateg, setNewCateg] = useState(\"\");\n  const [itemCategory, setItemCategory] = useRecoilState(itemCategoryState);\n  const [targetCateg, setTargetCateg] = useState({});\n\n  const methodCategory = useRecoilValue(methodCategoryState);\n\n  useEffect(() => {\n    const getItemCategData = async () => {\n      const data = await getDocs(collection(db, \"itemCateg\"));\n      setItemCategory(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemCategData();\n  }, [setItemCategory, itemCategory]);\n\n  useEffect(() => {\n    if (itemCategory.length > 0) {\n      const targetC = itemCategory.find((item) => item.id);\n\n      if (targetC) {\n        setTargetCateg(targetC);\n      }\n    }\n  }, [itemCategory]);\n\n  const changeValue = (e) => {\n    setItemsValue({\n      ...itemsValue,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const categChange = (e) => {\n    setCatagoryValue(e.target.value);\n  };\n\n  const methodChange = (e) => {\n    setMethodValue(e.target.value);\n  };\n\n  const addCateg = async () => {\n    try {\n      const categRef = await addDoc(collection(db, \"itemCateg\"), {\n        category: newCateg,\n        creatorId: userObj.uid,\n      });\n      console.log(categRef.id);\n      setItemCategory([...itemCategory, newCateg]);\n      setViewInput(false);\n      alert(\"추가 완료!\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const removeCateg = async () => {\n    const delItemCateg = doc(db, \"itemCateg\", targetCateg.id);\n    await deleteDoc(delItemCateg);\n    setItemCategory(\n      itemCategory.filter((categ) => categ.id !== targetCateg.id)\n    );\n    alert(\"삭제\");\n  };\n\n  const addQuantity = () => {\n    setQuantity(() => Number(quantity + 1));\n  };\n  const minusQuantity = () => {\n    if (quantity > 0) {\n      setQuantity(() => Number(quantity - 1));\n    }\n  };\n\n  return (\n    <Container>\n      <Image>\n        <ItemImage percent={percent} setFile={setFile} />\n      </Image>\n      <Ctag>\n        <AddNewCateg\n          viewInput={viewInput}\n          setViewInput={setViewInput}\n          itemCategory={itemCategory}\n          addCateg={addCateg}\n          removeCateg={removeCateg}\n          setNewCateg={setNewCateg}\n        />\n        <select value={categoryValue} onChange={categChange}>\n          <option value=\"none\">=== 선택 ===</option>\n          {itemCategory.map((categ) => (\n            <option key={categ.id} value={categ.category}>\n              {categ.category}\n            </option>\n          ))}\n        </select>\n      </Ctag>\n      <ItemName>\n        <label>물품명 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          name=\"products\"\n          value={itemsValue.products}\n        />\n      </ItemName>\n      <Quantity>\n        <label>수량 </label>\n        <NumInput>\n          <button type=\"button\" onClick={minusQuantity}>\n            -\n          </button>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={changeValue}\n            name=\"quantity\"\n          />\n          <button type=\"button\" onClick={addQuantity}>\n            +\n          </button>\n        </NumInput>\n      </Quantity>\n      <StorageLocation>\n        <label>보관위치 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.location}\n          name=\"location\"\n        />\n      </StorageLocation>\n      <Purchase>\n        <label>구매처/구매방법 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.purchase}\n          name=\"purchase\"\n        />\n        <select onChange={methodChange} value={methodValue}>\n          {methodCategory.map((method) => (\n            <option key={method.key} value={method.value}>\n              {method.value}\n            </option>\n          ))}\n        </select>\n      </Purchase>\n      <Description>\n        <label>설명 </label>\n        <textarea\n          cols=\"30\"\n          rows=\"10\"\n          onChange={changeValue}\n          value={itemsValue.descript}\n          name=\"descript\"\n        />\n      </Description>\n    </Container>\n  );\n}\n\nexport default ItemInputList;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { db, storage } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport ItemInputForm from \"components/form/postInput/ItemInputForm\";\nimport { useRecoilState } from \"recoil\";\nimport { itemPostState, quantityState } from \"../atoms\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport {\n  Wrapper,\n  Form,\n  Header,\n  GoBack,\n  Main,\n  Footer,\n  PostBtn,\n} from \"styles/ItemPost.style\";\n\nfunction ItemPost({ userObj }) {\n  // 이미지\n  const [file, setFile] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [percent, setPercent] = useState(0);\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [categoryValue, setCatagoryValue] = useState(\"\");\n  const [methodValue, setMethodValue] = useState(\"온라인\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const navigate = useNavigate();\n\n  const onSubmit = async () => {\n    try {\n      if (!file) {\n        alert(\"이미지를 선택하세요!\");\n        return;\n      }\n\n      const storageRef = ref(storage, `/files/${file.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const percent = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n\n          setPercent(percent);\n        },\n        (err) => console.log(err),\n        () => {\n          // download url\n          getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n            setImgUrl(url);\n          });\n        }\n      );\n\n      if (percent === 100) {\n        const docRef = await addDoc(collection(db, \"items\"), {\n          creatorId: userObj.uid,\n          category: categoryValue,\n          products: itemsValue.products,\n          quantity: quantity,\n          storageLocation: itemsValue.location,\n          purchase: itemsValue.purchase,\n          purchaseMethod: methodValue,\n          descript: itemsValue.descript,\n          createDate: moment().format(\"YYYY-MM-DD\"),\n          productsImg: imgUrl,\n        });\n        console.log(docRef.id);\n\n        setItemsValue({\n          products: \"\",\n          location: \"\",\n          purchase: \"\",\n          descript: \"\",\n          createdAt: \"\",\n        });\n        setQuantity(0);\n        navigate(\"/\");\n        alert(\"이미 업로드 완료\");\n        alert(\"등록이 완료되었습니다.\");\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Header>\n          <h1>물품 등록하기</h1>\n        </Header>\n        <Main>\n          <ItemInputForm\n            register={register}\n            errors={errors}\n            percent={percent}\n            setFile={setFile}\n            userObj={userObj}\n            categoryValue={categoryValue}\n            setCatagoryValue={setCatagoryValue}\n            methodValue={methodValue}\n            setMethodValue={setMethodValue}\n          />\n        </Main>\n        <Footer>\n          <Link to=\"/\">\n            <GoBack>뒤로가기</GoBack>\n          </Link>\n          <PostBtn type=\"submit\" value=\"등록하기\" />\n        </Footer>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ItemPost;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  width: 90vw;\n  height: 90vh;\n  margin-top: 20px;\n  border: 1px solid blue;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport const Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport const Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n`;\n\n\nexport const PostBtn = styled.input`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #2986F5;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const GoBack = styled.button`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #F9567A;\n  color: #fff;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n\n"],"names":["editState","atom","key","default","loginState","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","setFile","percent","image","type","accept","onChange","event","target","files","viewInput","setViewInput","itemCategory","addCateg","removeCateg","setNewCateg","useState","showCateg","setShowCateg","style","display","alignItems","onClick","e","name","map","categ","category","id","Container","styled","Image","Ctag","ItemName","Quantity","NumInput","StorageLocation","Purchase","Description","register","errors","userObj","categoryValue","setCatagoryValue","methodValue","setMethodValue","useRecoilState","itemsValue","setItemsValue","quantity","setQuantity","newCateg","setItemCategory","targetCateg","setTargetCateg","methodCategory","useRecoilValue","useEffect","getItemCategData","getDocs","collection","db","data","docs","doc","length","targetC","find","item","changeValue","addDoc","creatorId","uid","categRef","console","log","alert","error","message","delItemCateg","deleteDoc","filter","ItemImage","Number","method","cols","rows","file","imgUrl","setImgUrl","setPercent","useForm","handleSubmit","formState","navigate","useNavigate","onSubmit","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","snapshot","Math","round","bytesTransferred","totalBytes","err","getDownloadURL","then","url","storageLocation","purchaseMethod","createDate","moment","format","productsImg","docRef","ItemInputForm","to","Wrapper","Form","Header","Main","Footer","PostBtn","GoBack"],"sourceRoot":""}