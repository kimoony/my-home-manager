{"version":3,"file":"static/js/386.0d677c82.chunk.js","mappings":"sZAEaA,GAAYC,EAAAA,EAAAA,IAAK,CAC5BC,IAAK,YACLC,SAAS,IAGEC,GAAaH,EAAAA,EAAAA,IAAK,CAC7BC,IAAK,aACLC,SAAS,IAGEE,GAAYJ,EAAAA,EAAAA,IAAK,CAC5BC,IAAK,YACLC,SAAS,IAGEG,GAAgBL,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,CACPI,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,MAIFC,GAAgBX,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,IAGEU,GAAgBZ,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,CACPI,SAAU,GACVO,MAAO,EACPJ,SAAU,MAIDK,GAAed,EAAAA,EAAAA,IAAK,CAC/BC,IAAK,eACLC,SAAS,IAGEa,GAAgBf,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,KAGEc,GAAehB,EAAAA,EAAAA,IAAK,CAC/BC,IAAK,eACLC,QAAS,KAGEe,GAAoBjB,EAAAA,EAAAA,IAAK,CACpCC,IAAK,oBACLC,QAAS,KAGEgB,GAAsBlB,EAAAA,EAAAA,IAAK,CACtCC,IAAK,sBACLC,QAAS,CACP,CACED,IAAK,EACLkB,MAAO,sBAET,CACElB,IAAK,EACLkB,MAAO,4BAET,CACElB,IAAK,EACLkB,MAAO,oB,6PCtDb,I,IAAA,EAlBA,YAA8D,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,QAAgBC,GAAe,EAAtBC,MAAsB,EAAfD,aAO5C,OACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAcC,KAAK,OAAOC,OAAO,UAAUC,SAN1B,SAACC,GACpBT,EAAQS,EAAMC,OAAOC,MAAM,QAMzB,UAACC,EAAD,YACE,kBAAON,KAAK,SAASP,MAAM,qBAAMc,QAASX,KAC1C,4BAAOD,EAAP,8BAQFG,EAAUU,EAAAA,GAAAA,IAAH,yCAIPT,EAAeS,EAAAA,GAAAA,MAAH,+CAIZF,EAAYE,EAAAA,GAAAA,IAAH,+Q,UC4Bf,I,kBAAA,EAvDA,YAOI,IANFC,EAMC,EANDA,UACAC,EAKC,EALDA,aACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,YACAC,EACC,EADDA,YAEA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OACE,UAAC,EAAD,YACE,yDACCR,EAAY,MACX,iCACE,SAACS,EAAD,CAAKlB,KAAK,SAASP,MAAM,IAAIc,QAblB,WACjBG,GAAa,OAaP,SAACQ,EAAD,CACElB,KAAK,SACLP,MAAM,IACNc,QAAS,kBAAMU,GAAcD,SAIlCP,GACC,iBAAKU,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,WACE,kBAAOrB,KAAK,OAAOE,SAnBL,SAACoB,GACrBR,EAAYQ,EAAElB,OAAOX,QAkB6B8B,KAAK,iBACjD,mBAAQvB,KAAK,SAASO,QAASK,EAA/B,2BAGA,mBAAQZ,KAAK,SAASO,QAAS,kBAAMG,GAAa,IAAlD,6BAIAM,EACFL,EAAaa,KAAI,SAACC,GAAD,OACf,4BACE,yBAAMA,EAAMC,YACZ,iBAAMnB,QAASM,EAAf,UACE,SAAC,MAAD,QAHMY,EAAME,OAOhB,SAOJ7B,EAAUU,EAAAA,GAAAA,IAAH,kEAKPU,EAAMV,EAAAA,GAAAA,MAAH,wS,oBC4IT,I,cAAA,EAzLA,YAWG,EAVDoB,SAUC,EATDC,OASE,IARFlC,EAQC,EARDA,QACAD,EAOC,EAPDA,QACAoC,EAMC,EANDA,QACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,eACAtC,EACC,EADDA,YAEA,GAAoCuC,EAAAA,EAAAA,IAAexD,EAAAA,IAAnD,eAAOyD,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,IAAelD,EAAAA,IAA/C,eAAOqD,EAAP,KAAiBC,EAAjB,KAEA,GAAkCxB,EAAAA,EAAAA,WAAS,GAA3C,eAAON,EAAP,KAAkBC,EAAlB,KACA,GAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOyB,EAAP,KAAiB1B,EAAjB,KACA,GAAwCqB,EAAAA,EAAAA,IAAe5C,EAAAA,IAAvD,eAAOoB,EAAP,KAAqB8B,EAArB,KACA,GAAsC1B,EAAAA,EAAAA,UAAS,IAA/C,eAAO2B,EAAP,KAAoBC,EAApB,KAEMC,GAAiBC,EAAAA,EAAAA,IAAerD,EAAAA,KAEtCsD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,yCAAG,0GACJC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,cADnB,OACjBC,EADiB,OAEvBV,EACEU,EAAKC,KAAK5B,KAAI,SAAC6B,GAAD,eAAC,UACVA,EAAIF,QADK,IAEZxB,GAAI0B,EAAI1B,SALW,2CAAH,qDAStBoB,MACC,CAACN,EAAiB9B,KAErBmC,EAAAA,EAAAA,YAAU,WACR,GAAInC,EAAa2C,OAAS,EAAG,CAC3B,IAAMC,EAAU5C,EAAa6C,MAAK,SAACC,GAAD,OAAUA,EAAK9B,MAE7C4B,GACFZ,EAAeY,MAGlB,CAAC5C,IAEJ,IAAM+C,EAAc,SAACpC,GACnBe,GAAc,kBACTD,GADQ,cAEVd,EAAElB,OAAOmB,KAAOD,EAAElB,OAAOX,UAYxBmB,EAAQ,yCAAG,mHAEU+C,EAAAA,EAAAA,KAAOV,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAc,CACzDxB,SAAUc,EACVoB,UAAW9B,EAAQ+B,MAJR,OAEPC,EAFO,OAMbC,QAAQC,IAAIF,EAASnC,IACrBc,EAAgB,GAAD,eAAK9B,GAAL,CAAmB6B,KAClC9B,GAAa,GACbuD,MAAM,8BATO,kDAWbF,QAAQG,MAAM,KAAMC,SAXP,0DAAH,qDAeRtD,GAAW,yCAAG,gGACZuD,GAAef,EAAAA,EAAAA,IAAIH,EAAAA,GAAI,YAAaR,EAAYf,IADpC,UAEZ0C,EAAAA,EAAAA,IAAUD,GAFE,OAGlB3B,EACE9B,EAAa2D,QAAO,SAAC7C,GAAD,OAAWA,EAAME,KAAOe,EAAYf,OAE1DsC,MAAM,gBANY,2CAAH,qDAkBjB,OACE,UAACM,EAAD,YACE,SAACC,EAAD,WACE,SAAC,EAAD,CACE7E,QAASA,EACTD,QAASA,EACTE,YAAaA,OAGjB,UAAC6E,EAAD,YACE,SAAC,EAAD,CACEhE,UAAWA,EACXC,aAAcA,EACdC,aAAcA,EACdC,SAAUA,EACVC,YAAaA,GACbC,YAAaA,KAEf,oBAAQrB,MAAOsC,EAAe7B,SA3DhB,SAACoB,GACnBU,EAAiBV,EAAElB,OAAOX,QA0DtB,WACE,mBAAQA,MAAM,OAAd,4BACCkB,EAAaa,KAAI,SAACC,GAAD,OAChB,mBAAuBhC,MAAOgC,EAAMC,SAApC,SACGD,EAAMC,UADID,EAAME,cAMzB,UAAC+C,EAAD,YACE,oDACA,kBACE1E,KAAK,OACLE,SAAUwD,EACVnC,KAAK,WACL9B,MAAO2C,EAAWxD,eAGtB,UAAC+F,GAAD,YACE,8CACA,UAACC,GAAD,YACE,mBAAQ5E,KAAK,SAASO,QA7CR,WAChB+B,EAAW,GACbC,GAAY,kBAAMsC,OAAOvC,EAAW,OA2ChC,gBAGA,kBACEtC,KAAK,SACLP,MAAO6C,EACPpC,SAAUwD,EACVnC,KAAK,cAEP,mBAAQvB,KAAK,SAASO,QAzDV,WAClBgC,GAAY,kBAAMsC,OAAOvC,EAAW,OAwD9B,sBAKJ,UAACwC,GAAD,YACE,0DACA,kBACE9E,KAAK,OACLE,SAAUwD,EACVjE,MAAO2C,EAAWvD,SAClB0C,KAAK,iBAGT,UAACwD,GAAD,YACE,6EACA,kBACE/E,KAAK,OACLE,SAAUwD,EACVjE,MAAO2C,EAAWtD,SAClByC,KAAK,cAEP,mBAAQrB,SA3GO,SAACoB,GACpBY,EAAeZ,EAAElB,OAAOX,QA0GYA,MAAOwC,EAAvC,SACGW,EAAepB,KAAI,SAACwD,GAAD,OAClB,mBAAyBvF,MAAOuF,EAAOvF,MAAvC,SACGuF,EAAOvF,OADGuF,EAAOzG,cAM1B,UAAC0G,GAAD,YACE,8CACA,qBACEC,KAAK,KACLC,KAAK,KACLjF,SAAUwD,EACVjE,MAAO2C,EAAWrD,SAClBwC,KAAK,oBASTgD,EAAY/D,EAAAA,GAAAA,IAAH,4PAeTgE,EAAQhE,EAAAA,GAAAA,IAAH,kEAKLiE,EAAOjE,EAAAA,GAAAA,IAAH,uTAkBJkE,EAAWlE,EAAAA,GAAAA,IAAH,wMAaRmE,GAAWnE,EAAAA,GAAAA,IAAH,yYAyBRoE,GAAWpE,EAAAA,GAAAA,IAAH,mMAaRsE,GAAkBtE,EAAAA,GAAAA,IAAH,wMAYfuE,GAAWvE,EAAAA,GAAAA,IAAH,mYAsBRyE,GAAczE,EAAAA,GAAAA,IAAH,sL,2CCvMjB,OAvHA,YAAgC,IAAZsB,EAAW,EAAXA,QAElB,GAAwBf,EAAAA,EAAAA,UAAS,IAAjC,eAAOqE,EAAP,KAAa1F,EAAb,KACA,GAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOsE,EAAP,KAAeC,EAAf,KACA,GAA8BvE,EAAAA,EAAAA,UAAS,GAAvC,eAAOpB,EAAP,KAAgB4F,EAAhB,KACA,GAAoCpD,EAAAA,EAAAA,IAAexD,EAAAA,IAAnD,eAAOyD,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,IAAelD,EAAAA,IAA/C,eAAOqD,EAAP,KAAiBC,EAAjB,KAEA,GAA0CxB,EAAAA,EAAAA,UAAS,IAAnD,eAAOgB,EAAP,KAAsBC,EAAtB,KACA,GAAsCjB,EAAAA,EAAAA,UAAS,sBAA/C,eAAOkB,EAAP,KAAoBC,EAApB,KAEA,GAIIsD,EAAAA,EAAAA,MAHF5D,EADF,EACEA,SACA6D,EAFF,EAEEA,aACa5D,EAHf,EAGE6D,UAAa7D,OAGT8D,GAAWC,EAAAA,EAAAA,MAmCXC,EAAQ,yCAAG,qGAEG,MAAZlG,EAFS,kCAGUgE,EAAAA,EAAAA,KAAOV,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAAU,CACnDU,UAAW9B,EAAQ+B,IACnBnC,SAAUK,EACVnD,SAAUwD,EAAWxD,SACrB0D,SAAUA,EACVwD,gBAAiB1D,EAAWvD,SAC5BC,SAAUsD,EAAWtD,SACrBiH,eAAgB9D,EAChBlD,SAAUqD,EAAWrD,SACrBiH,WAAYC,IAAAA,GAASC,OAAO,cAC5BC,YAAad,IAbJ,OAGLe,EAHK,OAeXrC,QAAQC,IAAIoC,EAAOzE,IAEnBU,EAAc,CACZzD,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,KAEbuD,EAAY,GACZoD,EAAS,KACT1B,MAAM,kEA1BK,+BA4BXA,MAAM,4DA5BK,6EAgCbF,QAAQG,MAAM,KAAMC,SAhCP,0DAAH,qDAoCd,OACE,SAAC,GAAD,WACE,UAACkC,GAAD,CAAMR,SAAUJ,EAAaI,GAA7B,WACE,SAACS,GAAD,WACE,qEAEF,SAACC,GAAD,WACE,SAACC,EAAD,CACE5E,SAAUA,EACVC,OAAQA,EACRlC,QAASA,EACTD,QAASA,EACToC,QAASA,EACTC,cAAeA,EACfC,iBAAkBA,EAClBC,YAAaA,EACbC,eAAgBA,EAChBtC,YAtFU,WAClB,GAAKwF,EAAL,CAKA,IAAMqB,GAAaC,EAAAA,GAAAA,IAAIC,EAAAA,GAAD,iBAAoBvB,EAAK7D,OACzCqF,GAAaC,EAAAA,GAAAA,IAAqBJ,EAAYrB,GAEpDwB,EAAWE,GACT,iBACA,SAACC,GACC,IAAMpH,EAAUqH,KAAKC,MAClBF,EAASG,iBAAmBH,EAASI,WAAc,KAGtD5B,EAAW5F,MAEb,SAACyH,GAAD,OAASrD,QAAQC,IAAIoD,MACrB,YAEEC,EAAAA,GAAAA,IAAeT,EAAWG,SAASL,KAAKY,MAAK,SAACC,GAC5CjC,EAAUiC,SAKA,MAAZ5H,IACFsE,MAAM,gDACNF,QAAQC,IAAIqB,SA3BZpB,MAAM,kEAuFJ,UAACuD,GAAD,YACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,SAACC,GAAD,0CAEF,SAACC,GAAD,CAAS3H,KAAK,SAASP,MAAM,sCASjCK,GAAUU,EAAAA,GAAAA,IAAH,+HAQP6F,GAAO7F,EAAAA,GAAAA,KAAH,+KAUJ8F,GAAS9F,EAAAA,GAAAA,IAAH,8GAON+F,GAAO/F,EAAAA,GAAAA,IAAH,yHAOJgH,GAAShH,EAAAA,GAAAA,IAAH,0CAINmH,GAAUnH,EAAAA,GAAAA,MAAH,wJASAkH,GAASlH,EAAAA,GAAAA,OAAH","sources":["atoms.js","components/post/ItemImage.js","components/AddNewCateg.js","components/form/postInput/ItemInputForm.js","routes/ItemPost.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const editState = atom({\n  key: \"editState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction ItemImage({ setFile, percent, image, uploadImage }) {\n  // const [isEdit, setIsEdit] = useRecoilState(editState);\n\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  return (\n    <Wrapper>\n      <SelectImgBtn type=\"file\" accept=\"image/*\" onChange={handleChange} />\n      <UploadBox>\n        <input type=\"button\" value=\"업로드\" onClick={uploadImage} />\n        <span>{percent} \"% 완료\"</span>\n      </UploadBox>\n    </Wrapper>\n  );\n}\n\nexport default ItemImage;\n\nconst Wrapper = styled.div`\n  width: 330px;\n`;\n\nconst SelectImgBtn = styled.input`\n  margin-bottom: 5px;\n`;\n\nconst UploadBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  input {\n    border: none;\n    padding: 5px 10px;\n    background-color: #616365;\n    color: #fff;\n    border-radius: 10px;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nfunction AddNewCateg({\n  viewInput,\n  setViewInput,\n  itemCategory,\n  addCateg,\n  removeCateg,\n  setNewCateg,\n}) {\n  const [showCateg, setShowCateg] = useState(false);\n\n  const onClickAdd = () => {\n    setViewInput(true);\n  };\n\n  const onChangeCateg = (e) => {\n    setNewCateg(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <label>카테고리 </label>\n      {viewInput ? null : (\n        <>\n          <Btn type=\"button\" value=\"+\" onClick={onClickAdd} />\n          <Btn\n            type=\"button\"\n            value=\"-\"\n            onClick={() => setShowCateg(!showCateg)}\n          />\n        </>\n      )}\n      {viewInput ? (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input type=\"text\" onChange={onChangeCateg} name=\"newCategory\" />\n          <button type=\"button\" onClick={addCateg}>\n            추가\n          </button>\n          <button type=\"button\" onClick={() => setViewInput(false)}>\n            취소\n          </button>\n        </div>\n      ) : showCateg ? (\n        itemCategory.map((categ) => (\n          <div key={categ.id}>\n            <div>{categ.category}</div>\n            <span onClick={removeCateg}>\n              <MdDeleteForever />\n            </span>\n          </div>\n        ))\n      ) : null}\n    </Wrapper>\n  );\n}\n\nexport default AddNewCateg;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Btn = styled.input`\n  font-size: 18px;\n  border-radius: 50%;\n  background-color: #667078;\n  color: #fff;\n  border: none;\n  margin-top: 5px;\n  width: 20px;\n  height: 20px;\n  padding: 0px;\n\n  :hover {\n    background-color: #616365;\n  }\n  :last-child {\n    margin-left: 2px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport ItemImage from \"../../post/ItemImage\";\nimport AddNewCateg from \"../../AddNewCateg\";\nimport styled from \"styled-components\";\nimport {\n  itemPostState,\n  quantityState,\n  itemCategoryState,\n  methodCategoryState,\n} from \"atoms\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { db } from \"../../../firebase\";\nimport { useEffect } from \"react\";\n\nfunction ItemInputList({\n  register,\n  errors,\n  percent,\n  setFile,\n  userObj,\n  categoryValue,\n  setCatagoryValue,\n  methodValue,\n  setMethodValue,\n  uploadImage,\n}) {\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [viewInput, setViewInput] = useState(false);\n  const [newCateg, setNewCateg] = useState(\"\");\n  const [itemCategory, setItemCategory] = useRecoilState(itemCategoryState);\n  const [targetCateg, setTargetCateg] = useState({});\n\n  const methodCategory = useRecoilValue(methodCategoryState);\n\n  useEffect(() => {\n    const getItemCategData = async () => {\n      const data = await getDocs(collection(db, \"itemCateg\"));\n      setItemCategory(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemCategData();\n  }, [setItemCategory, itemCategory]);\n\n  useEffect(() => {\n    if (itemCategory.length > 0) {\n      const targetC = itemCategory.find((item) => item.id);\n\n      if (targetC) {\n        setTargetCateg(targetC);\n      }\n    }\n  }, [itemCategory]);\n\n  const changeValue = (e) => {\n    setItemsValue({\n      ...itemsValue,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const categChange = (e) => {\n    setCatagoryValue(e.target.value);\n  };\n\n  const methodChange = (e) => {\n    setMethodValue(e.target.value);\n  };\n\n  const addCateg = async () => {\n    try {\n      const categRef = await addDoc(collection(db, \"itemCateg\"), {\n        category: newCateg,\n        creatorId: userObj.uid,\n      });\n      console.log(categRef.id);\n      setItemCategory([...itemCategory, newCateg]);\n      setViewInput(false);\n      alert(\"추가 완료!\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const removeCateg = async () => {\n    const delItemCateg = doc(db, \"itemCateg\", targetCateg.id);\n    await deleteDoc(delItemCateg);\n    setItemCategory(\n      itemCategory.filter((categ) => categ.id !== targetCateg.id)\n    );\n    alert(\"삭제\");\n  };\n\n  const addQuantity = () => {\n    setQuantity(() => Number(quantity + 1));\n  };\n  const minusQuantity = () => {\n    if (quantity > 0) {\n      setQuantity(() => Number(quantity - 1));\n    }\n  };\n\n  return (\n    <Container>\n      <Image>\n        <ItemImage\n          percent={percent}\n          setFile={setFile}\n          uploadImage={uploadImage}\n        />\n      </Image>\n      <Ctag>\n        <AddNewCateg\n          viewInput={viewInput}\n          setViewInput={setViewInput}\n          itemCategory={itemCategory}\n          addCateg={addCateg}\n          removeCateg={removeCateg}\n          setNewCateg={setNewCateg}\n        />\n        <select value={categoryValue} onChange={categChange}>\n          <option value=\"none\"> 선택 </option>\n          {itemCategory.map((categ) => (\n            <option key={categ.id} value={categ.category}>\n              {categ.category}\n            </option>\n          ))}\n        </select>\n      </Ctag>\n      <ItemName>\n        <label>물품명 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          name=\"products\"\n          value={itemsValue.products}\n        />\n      </ItemName>\n      <Quantity>\n        <label>수량 </label>\n        <NumInput>\n          <button type=\"button\" onClick={minusQuantity}>\n            -\n          </button>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={changeValue}\n            name=\"quantity\"\n          />\n          <button type=\"button\" onClick={addQuantity}>\n            +\n          </button>\n        </NumInput>\n      </Quantity>\n      <StorageLocation>\n        <label>보관위치 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.location}\n          name=\"location\"\n        />\n      </StorageLocation>\n      <Purchase>\n        <label>구매처/구매방법 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.purchase}\n          name=\"purchase\"\n        />\n        <select onChange={methodChange} value={methodValue}>\n          {methodCategory.map((method) => (\n            <option key={method.key} value={method.value}>\n              {method.value}\n            </option>\n          ))}\n        </select>\n      </Purchase>\n      <Description>\n        <label>설명 </label>\n        <textarea\n          cols=\"30\"\n          rows=\"10\"\n          onChange={changeValue}\n          value={itemsValue.descript}\n          name=\"descript\"\n        />\n      </Description>\n    </Container>\n  );\n}\n\nexport default ItemInputList;\n\nconst Container = styled.div`\n  width: 50vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 10px 0px;\n\n  label {\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin: 5px 0px;\n  }\n`;\n\nconst Image = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Ctag = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  select {\n    margin-top: 10px;\n    text-align: center;\n    border-radius: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 5px 0px;\n  }\n  label {\n    margin-right: 10px;\n  }\n`;\n\nconst ItemName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  width: 320px;\n\n  input {\n    padding: 5px 0;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\n\nconst Quantity = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    border-radius: 10px;\n  }\n\n  button {\n    border: none;\n    border-radius: 50%;\n    background-color: #616365;\n    font-weight: bold;\n    color: #fff;\n    padding: 0px 10px;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n\nconst NumInput = styled.div`\n  width: 320px;\n  display: flex;\n\n  input {\n    width: 290px;\n    text-align: center;\n    margin: 0px 10px;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\n\nconst StorageLocation = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\nconst Purchase = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    margin-bottom: 5px;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n\n  select {\n    margin-top: 10px;\n    text-align: center;\n    border-radius: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 5px 0px;\n  }\n`;\nconst Description = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  textarea {\n    border-radius: 10px;\n    padding-left: 10px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { db, storage } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport ItemInputForm from \"components/form/postInput/ItemInputForm\";\nimport { useRecoilState } from \"recoil\";\nimport { itemPostState, quantityState } from \"../atoms\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport styled from \"styled-components\";\n\nfunction ItemPost({ userObj }) {\n  // 이미지\n  const [file, setFile] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [percent, setPercent] = useState(0);\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [categoryValue, setCatagoryValue] = useState(\"\");\n  const [methodValue, setMethodValue] = useState(\"온라인\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const navigate = useNavigate();\n\n  const uploadImage = () => {\n    if (!file) {\n      alert(\"이미지를 선택하세요!\");\n      return;\n    }\n\n    const storageRef = ref(storage, `/files/${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        setPercent(percent);\n      },\n      (err) => console.log(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setImgUrl(url);\n        });\n      }\n    );\n\n    if (percent === 100) {\n      alert(\"이미 업로드 완료\");\n      console.log(imgUrl);\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      if (percent === 100) {\n        const docRef = await addDoc(collection(db, \"items\"), {\n          creatorId: userObj.uid,\n          category: categoryValue,\n          products: itemsValue.products,\n          quantity: quantity,\n          storageLocation: itemsValue.location,\n          purchase: itemsValue.purchase,\n          purchaseMethod: methodValue,\n          descript: itemsValue.descript,\n          createDate: moment().format(\"YYYY-MM-DD\"),\n          productsImg: imgUrl,\n        });\n        console.log(docRef.id);\n\n        setItemsValue({\n          products: \"\",\n          location: \"\",\n          purchase: \"\",\n          descript: \"\",\n          createdAt: \"\",\n        });\n        setQuantity(0);\n        navigate(\"/\");\n        alert(\"등록이 완료되었습니다.\");\n      } else {\n        alert(\"사진을 업로드 하세요\");\n        return;\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Header>\n          <h1>물품 등록하기</h1>\n        </Header>\n        <Main>\n          <ItemInputForm\n            register={register}\n            errors={errors}\n            percent={percent}\n            setFile={setFile}\n            userObj={userObj}\n            categoryValue={categoryValue}\n            setCatagoryValue={setCatagoryValue}\n            methodValue={methodValue}\n            setMethodValue={setMethodValue}\n            uploadImage={uploadImage}\n          />\n        </Main>\n        <Footer>\n          <Link to=\"/\">\n            <GoBack>뒤로가기</GoBack>\n          </Link>\n          <PostBtn type=\"submit\" value=\"등록하기\" />\n        </Footer>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ItemPost;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  width: 90vw;\n  height: 90vh;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n`;\n\nconst PostBtn = styled.input`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #2986f5;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const GoBack = styled.button`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #f9567a;\n  color: #fff;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n"],"names":["editState","atom","key","default","loginState","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","setFile","percent","uploadImage","image","Wrapper","SelectImgBtn","type","accept","onChange","event","target","files","UploadBox","onClick","styled","viewInput","setViewInput","itemCategory","addCateg","removeCateg","setNewCateg","useState","showCateg","setShowCateg","Btn","style","display","alignItems","e","name","map","categ","category","id","register","errors","userObj","categoryValue","setCatagoryValue","methodValue","setMethodValue","useRecoilState","itemsValue","setItemsValue","quantity","setQuantity","newCateg","setItemCategory","targetCateg","setTargetCateg","methodCategory","useRecoilValue","useEffect","getItemCategData","getDocs","collection","db","data","docs","doc","length","targetC","find","item","changeValue","addDoc","creatorId","uid","categRef","console","log","alert","error","message","delItemCateg","deleteDoc","filter","Container","Image","Ctag","ItemName","Quantity","NumInput","Number","StorageLocation","Purchase","method","Description","cols","rows","file","imgUrl","setImgUrl","setPercent","useForm","handleSubmit","formState","navigate","useNavigate","onSubmit","storageLocation","purchaseMethod","createDate","moment","format","productsImg","docRef","Form","Header","Main","ItemInputForm","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","snapshot","Math","round","bytesTransferred","totalBytes","err","getDownloadURL","then","url","Footer","to","GoBack","PostBtn"],"sourceRoot":""}