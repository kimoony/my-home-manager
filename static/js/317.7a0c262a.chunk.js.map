{"version":3,"file":"static/js/317.7a0c262a.chunk.js","mappings":"sWAEaA,GAAaC,EAAAA,EAAAA,IAAK,CAC7BC,IAAK,aACLC,SAAS,IAGEC,GAAaH,EAAAA,EAAAA,IAAK,CAC7BC,IAAK,aACLC,SAAS,IAGEE,GAAYJ,EAAAA,EAAAA,IAAK,CAC5BC,IAAK,YACLC,SAAS,IAGEG,GAAgBL,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,CACPI,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,SAAU,GACVC,UAAW,MAIFC,GAAgBb,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,IAGEY,GAAgBd,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,CACPI,SAAU,GACVC,SAAU,GACVQ,MAAO,EACPJ,SAAU,MAIDK,GAAehB,EAAAA,EAAAA,IAAK,CAC/BC,IAAK,eACLC,SAAS,IAGEe,GAAgBjB,EAAAA,EAAAA,IAAK,CAChCC,IAAK,gBACLC,QAAS,KAGEgB,GAAelB,EAAAA,EAAAA,IAAK,CAC/BC,IAAK,eACLC,QAAS,M,iPCvDEiB,EAAUC,EAAAA,GAAAA,IAAH,wCAIPC,EAASD,EAAAA,GAAAA,OAAH,8GAONE,EAAQF,EAAAA,GAAAA,GAAH,sBAILG,GAFYH,EAAAA,GAAAA,MAAH,sBAEAA,EAAAA,GAAAA,IAAH,iEAKNI,EAAUJ,EAAAA,GAAAA,OAAH,oFAMPK,EAAUL,EAAAA,GAAAA,IAAH,4GAOPM,EAAUN,EAAAA,GAAAA,IAAH,qKAWPO,EAAWP,EAAAA,GAAAA,IAAH,yGAORQ,EAAWR,EAAAA,GAAAA,IAAH,qKAWRS,EAAUT,EAAAA,GAAAA,IAAH,qGAOPU,EAAaV,EAAAA,GAAAA,IAAH,wGAOVW,EAAUX,EAAAA,GAAAA,OAAH,wJ,mBC5EPD,EAAUC,EAAAA,GAAAA,IAAH,gQAePY,EAAUZ,EAAAA,GAAAA,IAAH,kQAcPa,EAAOb,EAAAA,GAAAA,KAAH,qEAKJc,GAAWd,EAAAA,GAAAA,OAAH,+JASRE,GAAQF,EAAAA,GAAAA,GAAH,wCAILe,GAAWf,EAAAA,GAAAA,IAAH,wJAURgB,GAAQhB,EAAAA,GAAAA,MAAH,wBAILiB,GAAYjB,EAAAA,GAAAA,KAAH,uF,2CCpDtBkB,GAAAA,GAAAA,IAAYC,GAAAA,KAoCZ,OAlCA,YAA2C,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAEpBC,EAAc,yCAAG,WAAOC,GAAP,oFAKR,WAFTA,EADFC,OAAUC,OAIVC,EAAW,IAAIC,EAAAA,IANI,UAWFC,EAAAA,EAAAA,IAAgBC,EAAAA,GAAaH,GAX3B,OAWfI,EAXe,OAYrBC,QAAQC,IAAIF,GACZV,IACAC,GAAW,GACXY,MAAM,oCAfe,2CAAH,sDAkBpB,OACE,iBAAKC,UAAU,iBAAf,UACE,iBAAKA,UAAU,mBAAf,UACE,qBAAQA,UAAU,iBAAiBT,KAAK,SAASU,QAASb,EAA1D,WACE,UAAC,KAAD,CAAiBc,KAAM,CAAC,MAAO,YADjC,qCCyGR,OAnHA,YAAwD,IAApChB,EAAmC,EAAnCA,WAAYiB,EAAuB,EAAvBA,QAAShB,EAAc,EAAdA,WAGvC,GAAiEiB,EAAAA,EAAAA,MAAzDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAAoBC,EAApD,EAAuCC,UAAaD,OAEpD,GAA8BE,EAAAA,EAAAA,IAAe5D,EAAAA,IAA7C,eAAO6D,EAAP,KAAgBC,EAAhB,KAGA,GAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACMC,GAAWC,EAAAA,EAAAA,UACjBD,EAASE,QAAUX,EAAM,YAEzB,IAAMY,GAAWC,EAAAA,EAAAA,MAKXC,EAAQ,yCAAG,WAAOC,GAAP,+EACfzB,QAAQC,IAAIwB,GADG,UAITX,EAJS,iCAKEY,EAAAA,EAAAA,IACX5B,EAAAA,GAAa2B,EAAKE,MAAOF,EAAKN,UANrB,OAKXpB,EALW,OAQXgB,GAAW,GARA,8BAUXa,EAAAA,EAAAA,IAAe9B,EAAAA,GAAa+B,EAAAA,IAVjB,WAWEC,EAAAA,EAAAA,IACXhC,EAAAA,GAAa2B,EAAKE,MAAOF,EAAKN,UAZrB,QAWXpB,EAXW,OAcXV,IACAC,GAAW,GACXY,MAAM,oCACNoB,EAAS,KAjBE,QAmBbtB,QAAQC,IAAIF,GAnBC,kDAqBbmB,EAAmB,KAAMa,SArBZ,0DAAH,sDA2Bd,OACE,gCACGzB,GACC,UAAC,EAAD,WACE,WAACzB,EAAD,YACE,WAACC,EAAD,CAAM0C,SAAUf,EAAae,GAA7B,WACE,2BACE,UAACzC,GAAD,CAAUqB,QAASf,EAAnB,kBAEF,UAAC,GAAD,UAEIyB,EAAU,2BAAS,wBAGvB,WAAC9B,GAAD,YACE,UAACC,IAAD,QACES,KAAK,QACLsC,KAAK,QACLC,YAAY,sBACRzB,EAAS,QAAS,CAAE0B,UAAU,EAAMC,QAAS,iBAElDxB,EAAOgB,OAA+B,aAAtBhB,EAAOgB,MAAMK,OAC5B,oHAEDrB,EAAOgB,OAA+B,YAAtBhB,EAAOgB,MAAMK,OAC5B,gHAEF,UAAC/C,IAAD,gBACES,KAAK,WACLsC,KAAK,YACDxB,EAAS,WAAY,CAAE0B,UAAU,EAAME,UAAW,KAHxD,IAIEA,UAAW,EACXH,YAAY,yDACbtB,EAAOQ,UAAqC,aAAzBR,EAAOQ,SAASa,OAClC,0HAEDrB,EAAOQ,UAAqC,cAAzBR,EAAOQ,SAASa,OAClC,4HAEDlB,GACE,UAAC7B,IAAD,gBACCS,KAAK,kBACLsC,KAAK,YACDxB,EAAS,kBAAmB,CAC9B0B,UAAU,EACVG,SAAU,SAACC,GAAD,OAAWA,IAAUnB,EAASE,YAL3C,IAOCY,YAAY,uDAAkB,KACjCtB,EAAO4B,iBAC0B,aAAhC5B,EAAO4B,gBAAgBP,OACrB,uIAEHrB,EAAO4B,iBAC0B,aAAhC5B,EAAO4B,gBAAgBP,OACrB,8GAGHf,IAAmB,wBAAIA,KAExB,UAAChC,GAAD,CAAO+C,KAAK,SAASM,MAAOxB,EAAU,2BAAS,8BAGnD,UAAC5B,GAAD,CAAWkB,QA3FF,kBAAMW,GAAW,SAAAyB,GAAI,OAAKA,MA2FnC,SAAiC1B,EAAU,8EAAoB,0DAC/D,UAAC,GAAD,CAAMzB,WAAYA,EAAYC,WAAYA,SAG5C,QC/GV,I,MAAA,GArBA,YAAiC,IAAZmD,EAAW,EAAXA,QACbC,GAAUC,EAAAA,EAAAA,IAAe3F,EAAAA,IACzB4F,GAAWD,EAAAA,EAAAA,IAAe7E,EAAAA,IAEhC,OACE,gCACG4E,EACGE,EAASC,KAAI,SAACC,GAAD,OACXL,EAAQM,MAAQD,EAAGE,WACjB,0BACGF,EAAGG,UAAY,EAAf,UACMH,EAAG1F,SADT,kBACsB0F,EAAGG,SADzB,2CAEG,IAHIH,EAAGI,IAKX,QAEN,QClBGC,GAAgBlF,EAAAA,GAAAA,IAAH,8JASHA,EAAAA,GAAAA,IAAH,4BC6EpB,I,MAAA,GAhFA,YAAgC,IAAZwE,EAAW,EAAXA,QACZC,GAAUC,EAAAA,EAAAA,IAAe3F,EAAAA,IAE/B,GAAgCgE,EAAAA,EAAAA,UAAS,IAAzC,eAAOoC,EAAP,KAAiBC,EAAjB,KACA,GAA8BxC,EAAAA,EAAAA,IAAe9C,EAAAA,IAA7C,eAAOuF,EAAP,KAAgBC,EAAhB,KAIMjC,GAAWC,EAAAA,EAAAA,OAUjBiC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAQG,OAAS,EAAG,CACtB,IAAMC,EAAaJ,EAAQK,MAAK,SAACC,GAAD,OAAUA,EAAKV,MAC3CQ,GACFL,EAAYK,MAGf,CAACJ,IAEJ,IAAMO,EAAa,yCAAG,gGACdC,GAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,YAAaZ,EAASF,IAD1B,UAEde,EAAAA,EAAAA,IAAUH,GAFI,OAGpBP,EAAWD,EAAQY,QAAO,SAACC,GAAD,OAAUA,EAAKjB,KAAOE,EAASF,OACzDhD,MAAM,6BAJc,2CAAH,qDAOnB,OACE,iBAAKkE,MAAO,CAAEC,OAAQ,MAAOC,SAAU,QAAvC,SACG5B,GACC,iBACE0B,MAAO,CACLG,QAAS,OACTC,cAAe,SACfC,WAAY,SACZJ,OAAQ,QALZ,SAQGf,EAAQG,OAAS,EACdH,EAAQT,KAAI,SAACsB,GAAD,OACV1B,EAAQM,MAAQoB,EAAKnB,WACnB,WAACG,GAAD,YACE,kBACEiB,MAAO,CACLG,QAAS,OACTG,eAAgB,gBAChBD,WAAY,SACZE,MAAO,QAETvE,QAAS,kBAAMkB,EAAS,eAAD,OAAgB6C,EAAKjB,MAP9C,WASE,0BAAMiB,EAAK/G,YACX,0BAAM+G,EAAKvG,SACX,2BAAOuG,EAAKS,iBAEd,2BACE,oBACExE,QAASyD,EACTO,MAAO,CAAES,WAAY,OAAQC,YAAa,QAF5C,8BAfgBX,EAAKjB,IAuBvB,QAEN,OAEJ,QCjFGC,GAAgBlF,EAAAA,GAAAA,IAAH,8JASHA,EAAAA,GAAAA,IAAH,4BCwFpB,OA3FA,YAAgC,IAAZwE,EAAW,EAAXA,QACZC,GAAUC,EAAAA,EAAAA,IAAe3F,EAAAA,IAE/B,IADmB6D,EAAAA,EAAAA,IAAejE,EAAAA,KACFoE,EAAAA,EAAAA,UAAS,KAAzC,eAAOoC,EAAP,KAAiBC,EAAjB,KACA,GAAgCxC,EAAAA,EAAAA,IAAe/C,EAAAA,IAA/C,eAAO8E,EAAP,KAAiBmC,EAAjB,KAEMzD,GAAWC,EAAAA,EAAAA,OAIjBiC,EAAAA,EAAAA,YAAU,WACR,GAAIZ,EAASa,OAAS,EAAG,CACvB,IAAMuB,EAAapC,EAASe,MAAK,SAACC,GAAD,OAAUA,EAAKV,MAE5C8B,GACF3B,EAAY2B,MAGf,CAACpC,IAEJ,IAAMqC,EAAQ,yCAAG,gGACTC,GAAUnB,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASZ,EAASF,IAD3B,UAETe,EAAAA,EAAAA,IAAUiB,GAFD,OAGfH,EAAYnC,EAASsB,QAAO,SAACN,GAAD,OAAUA,EAAKV,KAAOE,EAASF,OAC3DhD,MAAM,6BAJS,2CAAH,qDAed,OACE,iBAAKkE,MAAO,CAAEC,OAAQ,MAAOC,SAAU,QAAvC,SACG5B,GACC,iBACE0B,MAAO,CACLG,QAAS,OACTC,cAAe,SACfC,WAAY,SACZJ,OAAQ,SALZ,SAQGzB,EAASa,OAAS,EACjBb,EAASC,KAAI,SAACe,GAAD,OACXnB,EAAQM,MAAQa,EAAKZ,WACnB,WAAC,GAAD,YACE,kBACEoB,MAAO,CACLG,QAAS,OACTG,eAAgB,gBAChBD,WAAY,SACZE,MAAO,QALX,WAQE,iBAAKvE,QAAS,kBAAMkB,EAAS,eAAD,OAAgBsC,EAAKV,MAAjD,SACGU,EAAKxG,YAER,2BAAOwG,EAAKX,YACZ,2BAAOW,EAAKgB,iBAEd,2BACE,oBAAQxE,QAAS6E,EAAjB,8BAhBgBrB,EAAKV,IAmBvB,SAGN,+FAIJ,iBACEkB,MAAO,CACLG,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZE,MAAO,OACPN,OAAQ,QANZ,UASE,qHCuEV,OAnIA,YAA4B,IAAZ5B,EAAW,EAAXA,QACd,GAAgC5B,EAAAA,EAAAA,IAAe/C,EAAAA,IAA/C,eAAO8E,EAAP,KAAiBmC,EAAjB,KACA,GAA8BlE,EAAAA,EAAAA,IAAe9C,EAAAA,IAA7C,eAAOuF,EAAP,KAAgBC,EAAhB,KACA,GAA8B1C,EAAAA,EAAAA,IAAe7D,EAAAA,IAA7C,eAAO0F,EAAP,KAAgBpD,EAAhB,KACA,GAA8BuB,EAAAA,EAAAA,IAAejE,EAAAA,IAA7C,eAAO0D,EAAP,KAAgB6E,EAAhB,KACA,GAA4BtE,EAAAA,EAAAA,IAAehD,EAAAA,IAA3C,eAAOuH,EAAP,KAAeC,EAAf,KAEM/D,GAAWC,EAAAA,EAAAA,MAEX+D,EAAU,4BAAwBC,EAAAA,GAAxB,cACVC,IAAUC,eAAeC,QAAQJ,IAEvC9B,EAAAA,EAAAA,YAAU,WACR,IAAMmC,EAAW,yCAAG,0GACCC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAW7B,EAAAA,GAAI,UADxB,OACZvC,EADY,OAElBsD,EACEtD,EAAKqE,KAAKjD,KAAI,SAACkB,GAAD,eAAC,UACVA,EAAItC,QADK,IAEZyB,GAAIa,EAAIb,SALM,2CAAH,qDASjByC,IACAN,GAAU,KACT,CAACD,EAAQxC,KAEZY,EAAAA,EAAAA,YAAU,WACR,IAAMuC,EAAW,yCAAG,0GACCH,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAW7B,EAAAA,GAAI,cADxB,OACZvC,EADY,OAElB8B,EACE9B,EAAKqE,KAAKjD,KAAI,SAACkB,GAAD,eAAC,UACVA,EAAItC,QADK,IAEZyB,GAAIa,EAAIb,SALM,2CAAH,qDASjB6C,IACAV,GAAU,KACT,CAACD,EAAQ9B,KAEZE,EAAAA,EAAAA,YAAU,YACQ,IAAZgC,GAAgC,OAAZ/C,GACtBnD,GAAW,KAEZ,CAACmD,EAAS+C,EAASlG,IAEtB,IAAM0G,EAAY,WAChBb,GAAW,IA4Bb,OACE,WAACnH,EAAD,YACE,UAACE,EAAD,WACE,UAACC,EAAD,8BAGF,WAACC,EAAD,WACGsE,GACC,mCACE,6BAAOD,EAAQwD,YAAf,8CACA,UAAC5H,EAAD,CAAS+B,QAhCH,WACdd,GAAW,GAEXQ,EAAAA,GAAAA,UACAI,MAAM,6DA4BE,uCACA,UAAC,KAAD,CAAMgG,GAAG,SAAT,UACE,UAAC7H,EAAD,mDAIJ,UAACA,EAAD,CAAS+B,QAAS4F,EAAlB,iCAEF,UAAC,GAAD,CACE1F,QAASA,EACTjB,WA9CW,WACjB8F,GAAW,IA8CL7F,WAAYA,QAGhB,WAAChB,EAAD,YACE,WAACC,EAAD,YACE,mEAEE,4BACE,UAACK,EAAD,CAASwB,QA5CC,WAChBsC,EACFpB,EAAS,cAET0E,KAwCQ,4CAGJ,UAACxH,EAAD,WACE,UAAC,GAAD,CAAUiE,QAASA,UAGvB,WAAChE,EAAD,YACE,2CACA,UAACC,EAAD,WACE,UAAC,GAAD,CAAW+D,QAASA,OAEtB,6DAEE,4BACE,UAAC7D,EAAD,CAASwB,QApDC,WAChBsC,EACFpB,EAAS,cAET0E,KAgDQ,4CAGJ,UAACrH,EAAD,WACE,UAAC,GAAD,CAAU8D,QAASA","sources":["atoms.js","styles/Home.style.js","styles/SignForm.style.js","components/modals/sign/Auth.js","components/modals/sign/SignForm.js","components/list/AlarmList.js","styles/list/WishList.style.js","components/list/WishList.js","styles/list/ItemList.style.js","components/list/ItemList.js","routes/Home.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const modalState = atom({\n  key: \"modalState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: true,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    category: \"\",\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    purchaseMethod: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    category: \"\",\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const Header = styled.header`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1``;\n\nexport const ThemeMode = styled.input``;\n\nexport const BtnBox = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const SignBtn = styled.button`\n  margin-right: 30px;\n  float: right;\n  cursor: pointer;\n`;\n\nexport const ListBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n`;\n\nexport const LeftBox = styled.div`\n  width: 100vw;\n  height: 505px;\n  margin-right: 10px;\n  button {\n    margin-top: 5px;\n    float: right;\n    margin-right: 10px;\n  }\n`;\n\nexport const MainList = styled.div`\n  width: 95%;\n  height: 100%;\n  border: 1px solid red;\n  padding: 10px 15px;\n`;\n\nexport const RightBox = styled.div`\n  width: 70vw;\n  height: 400px;\n  margin-right: 50px;\n  button {\n    margin-top: 5px;\n    float: right;\n    margin-right: -15px;\n  }\n`;\n\nexport const TopList = styled.div`\n  width: 100%;\n  height: 50%;\n  padding: 10px;\n  border: 1px solid blue;\n`;\n\nexport const BottomList = styled.div`\n  width: 100%;\n  height: 55.7%;\n  padding: 10px;\n  border: 1px solid green;\n`;\n\nexport const PostBtn = styled.button`\n  border: none;\n  border-radius: 5px;\n  background-color: #2986f5;\n  color: #fff;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: rgba(0, 0, 0, .3);\n`;\n\nexport const FormBox = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  max-height: 80%;\n  width: 20rem;\n  height: 80%;\n  padding: 16px;\n  background: rgb(25, 31, 44);\n  border-radius: 10px;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CloseBtn = styled.button`\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: rgb(25, 31, 44);\n  float: right;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  color: #fff;\n`;\n\nexport const InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  span {\n    align-self: flex-start;\n    color: red;\n    margin: 5px 0px;\n  }\n`;\n\nexport const Input = styled.input`\n`;\n\n\nexport const ToggleBtn = styled.span`\n  color: #fff;\n  display: inline-block;\n  margin-top: 10px;\n`;","import React from 'react';\nimport { authService } from '../../../firebase';\nimport {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  signInWithPopup\n} from \"firebase/auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(fab)\n\nfunction Auth({ closeModal, setIsLogIn }) {\n\n  const onSocialClicik = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    }\n    //  else if (name === \"github\") {\n    //   provider = new GithubAuthProvider();\n    // }\n    const user = await signInWithPopup(authService, provider);\n    console.log(user)\n    closeModal();\n    setIsLogIn(true);\n    alert(\"로그인 완료!\")\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <div className='social_login-box'>\n        <button className='btn google-btn' name=\"google\" onClick={onSocialClicik}>\n          <FontAwesomeIcon icon={[\"fab\", \"google\"]} /> Google 로그인\n        </button>\n        {/* <button className='btn github-btn' name=\"github\" onClick={onSocialClicik}>\n          <FontAwesomeIcon icon={[\"fab\", \"github\"]} /> GitHub 로그인\n        </button> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","import React, { useState, useRef } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { authService } from '../../../firebase';\nimport {\n  browserSessionPersistence,\n  createUserWithEmailAndPassword,\n  setPersistence,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  Wrapper,\n  FormBox,\n  Form,\n  CloseBtn,\n  Title,\n  InputBox,\n  Input,\n  ToggleBtn\n} from 'styles/SignForm.style';\nimport Auth from './Auth';\nimport { useRecoilState } from 'recoil';\nimport { userState } from 'atoms';\nimport { useNavigate } from 'react-router-dom';\n\n// console.log(authService)\n\nfunction SignForm({ closeModal, onModal, setIsLogIn }) {\n\n\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n\n  const [newUser, setNewUser] = useRecoilState(userState);\n\n\n  const [errorFromSubmit, setErrorFromSubmit] = useState(\"\");\n  const password = useRef();\n  password.current = watch(\"password\");\n\n  const navigate = useNavigate();\n\n\n  const toggleSign = () => setNewUser(prev => !prev);\n\n  const onSubmit = async (data) => {\n    console.log(data)\n    let user;\n    try {\n      if (newUser) {\n        user = await createUserWithEmailAndPassword(\n          authService, data.email, data.password\n        )\n        setNewUser(false)\n      } else {\n        setPersistence(authService, browserSessionPersistence)\n        user = await signInWithEmailAndPassword(\n          authService, data.email, data.password\n        )\n        closeModal();\n        setIsLogIn(true);\n        alert(\"로그인 완료!\");\n        navigate('/');\n      }\n      console.log(user)\n    } catch (error) {\n      setErrorFromSubmit(error.message)\n      // console.error(error.message);\n    }\n  }\n\n\n  return (\n    <>\n      {onModal ? (\n        <Wrapper>\n          <FormBox>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <div>\n                <CloseBtn onClick={closeModal}>X</CloseBtn>\n              </div>\n              <Title>\n                {\n                  newUser ? \"회원가입\" : \"로그인\"\n                }\n              </Title>\n              <InputBox>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder='이메일'\n                  {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\n                />\n                {errors.email && errors.email.type === \"required\" && (\n                  <p>이메일은 반드시 입력해야합니다.</p>\n                )}\n                {errors.email && errors.email.type === \"pattern\" && (\n                  <p>이메일이 형식에 맞지 않습니다.</p>\n                )}\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  {...register(\"password\", { required: true, minLength: 8 })}\n                  minLength={8}\n                  placeholder='비밀번호 8자리 이상' />\n                {errors.password && errors.password.type === \"required\" && (\n                  <p>비밀번호는 반드시 입력해야합니다.</p>\n                )}\n                {errors.password && errors.password.type === \"minLength\" && (\n                  <p>비밀번호는 6글자 이상이여야 합니다.</p>\n                )}\n                {newUser ?\n                  (<Input\n                    name=\"passwordConfirm\"\n                    type=\"password\"\n                    {...register(\"passwordConfirm\", {\n                      required: true,\n                      validate: (value) => value === password.current,\n                    })}\n                    placeholder='비밀번호를 재입력' />) : null}\n                {errors.passwordConfirm &&\n                  errors.passwordConfirm.type === \"required\" && (\n                    <p>비밀번호 확인은 반드시 입력해야합니다.</p>\n                  )}\n                {errors.passwordConfirm &&\n                  errors.passwordConfirm.type === \"validate\" && (\n                    <p>비밀번호가 일치하지 않습니다.</p>\n                  )}\n\n                {errorFromSubmit && <p>{errorFromSubmit}</p>}\n\n                <Input type=\"submit\" value={newUser ? \"회원가입\" : \"로그인\"} />\n              </InputBox>\n            </Form>\n            <ToggleBtn onClick={toggleSign}>{newUser ? \"가입했다면? ☛☛ 로그인하기\" : \"회원가입 하러 가기..\"}</ToggleBtn>\n            <Auth closeModal={closeModal} setIsLogIn={setIsLogIn} />\n          </FormBox>\n        </Wrapper>\n      ) : null}\n    </>\n  )\n}\n\nexport default SignForm","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { getItemsState, loginState } from \"../../atoms\";\n\nfunction AlarmList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  const getItems = useRecoilValue(getItemsState);\n\n  return (\n    <>\n      {isLogIn\n        ? getItems.map((it) =>\n            userObj.uid === it.creatorId ? (\n              <div key={it.id}>\n                {it.quantity <= 3\n                  ? `${it.products}가 ${it.quantity}개 남았습니다. `\n                  : \"\"}\n              </div>\n            ) : null\n          )\n        : null}\n    </>\n  );\n}\n\nexport default AlarmList;\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  width: 90%;\n  height: 100px;\n  border: 1px solid black;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n`;\n\nexport const LeftBox = styled.div`\n\n`","import React, { useEffect, useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { getWishState, loginState, modalState } from \"../../atoms\";\nimport { ListContainer } from \"../../styles/list/WishList.style\";\nimport { useNavigate } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nimport { doc, deleteDoc } from \"firebase/firestore\";\n\nfunction WishList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  // const setOnModal = useRecoilState(modalState);\n  const [targetId, setTargetId] = useState({});\n  const [getWish, setGetWish] = useRecoilState(getWishState);\n\n  // console.log(getWish);\n\n  const navigate = useNavigate();\n\n  // const isLogedInWish = () => {\n  //   if (isLogIn) {\n  //     navigate(\"/wish-post\");\n  //   } else {\n  //     setOnModal(true);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (getWish.length > 0) {\n      const targetWish = getWish.find((item) => item.id);\n      if (targetWish) {\n        setTargetId(targetWish);\n      }\n    }\n  }, [getWish]);\n\n  const onClickDelete = async () => {\n    const delWish = doc(db, \"wishItems\", targetId.id);\n    await deleteDoc(delWish);\n    setGetWish(getWish.filter((wish) => wish.id !== targetId.id));\n    alert(\"삭제완료!\");\n  };\n\n  return (\n    <div style={{ height: \"95%\", overflow: \"auto\" }}>\n      {isLogIn ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"60px\",\n          }}\n        >\n          {getWish.length > 0\n            ? getWish.map((wish) =>\n                userObj.uid === wish.creatorId ? (\n                  <ListContainer key={wish.id}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        width: \"100%\",\n                      }}\n                      onClick={() => navigate(`wish-detail/${wish.id}`)}\n                    >\n                      <div>{wish.products}</div>\n                      <div>{wish.price}</div>\n                      <span>{wish.createDate}</span>\n                    </div>\n                    <div>\n                      <button\n                        onClick={onClickDelete}\n                        style={{ marginLeft: \"25px\", marginRight: \"10px\" }}\n                      >\n                        삭제\n                      </button>\n                    </div>\n                  </ListContainer>\n                ) : null\n              )\n            : null}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default WishList;\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  width: 90%;\n  height: 100px;\n  border: 1px solid black;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n`;\n\nexport const LeftBox = styled.div`\n\n`","import React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { getItemsState, loginState, modalState } from \"../../atoms\";\nimport { db } from \"../../firebase\";\nimport { doc, deleteDoc } from \"firebase/firestore\";\nimport { ListContainer } from \"../../styles/list/ItemList.style\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ItemList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  const setOnModal = useRecoilState(modalState);\n  const [targetId, setTargetId] = useState({});\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n\n  const navigate = useNavigate();\n  // console.log(getItems);\n\n  // id filter\n  useEffect(() => {\n    if (getItems.length > 0) {\n      const targetItem = getItems.find((item) => item.id);\n\n      if (targetItem) {\n        setTargetId(targetItem);\n      }\n    }\n  }, [getItems]);\n\n  const onDelete = async () => {\n    const delItem = doc(db, \"items\", targetId.id);\n    await deleteDoc(delItem);\n    setGetItems(getItems.filter((item) => item.id !== targetId.id));\n    alert(\"삭제완료!\");\n  };\n\n  const isLogedInPost = () => {\n    if (isLogIn) {\n      navigate(\"/item-post\");\n    } else {\n      setOnModal(true);\n    }\n  };\n\n  return (\n    <div style={{ height: \"95%\", overflow: \"auto\" }}>\n      {isLogIn ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"300px\",\n          }}\n        >\n          {getItems.length > 0 ? (\n            getItems.map((item) =>\n              userObj.uid === item.creatorId ? (\n                <ListContainer key={item.id}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <div onClick={() => navigate(`item-detail/${item.id}`)}>\n                      {item.products}\n                    </div>\n                    <span>{item.quantity}</span>\n                    <span>{item.createDate}</span>\n                  </div>\n                  <div>\n                    <button onClick={onDelete}>삭제</button>\n                  </div>\n                </ListContainer>\n              ) : null\n            )\n          ) : (\n            <p>아이템을 등록해 보세요!</p>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          <h3>로그인 또는 회원가입 해주세요!</h3>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemList;\n","import React, { useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { authService, apikey, db } from \"../firebase\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  getItemsState,\n  getWishState,\n  loginState,\n  modalState,\n  changedState,\n} from \"../atoms\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport {\n  Wrapper,\n  Header,\n  Title,\n  // ThemeMode,\n  BtnBox,\n  SignBtn,\n  ListBox,\n  LeftBox,\n  MainList,\n  RightBox,\n  TopList,\n  BottomList,\n  PostBtn,\n} from \"../styles/Home.style\";\nimport SignForm from \"components/modals/sign/SignForm\";\nimport AlarmList from \"components/list/AlarmList\";\nimport WishList from \"components/list/WishList\";\nimport ItemList from \"components/list/ItemList\";\n\nfunction Home({ userObj }) {\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n  const [getWish, setGetWish] = useRecoilState(getWishState);\n  const [isLogIn, setIsLogIn] = useRecoilState(loginState);\n  const [onModal, setOnModal] = useRecoilState(modalState);\n  const [change, setChange] = useRecoilState(changedState);\n\n  const navigate = useNavigate();\n\n  const sessionKey = `firebase:authUser:${apikey}:[DEFAULT]`;\n  const session = sessionStorage.getItem(sessionKey) ? true : false;\n\n  useEffect(() => {\n    const getItemData = async () => {\n      const data = await getDocs(collection(db, \"items\"));\n      setGetItems(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemData();\n    setChange(false);\n  }, [change, getItems]);\n\n  useEffect(() => {\n    const getWishData = async () => {\n      const data = await getDocs(collection(db, \"wishItems\"));\n      setGetWish(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getWishData();\n    setChange(false);\n  }, [change, getWish]);\n\n  useEffect(() => {\n    if (session === true && userObj !== null) {\n      setIsLogIn(true);\n    }\n  }, [userObj, session, setIsLogIn]);\n\n  const openModal = () => {\n    setOnModal(true);\n  };\n  const closeModal = () => {\n    setOnModal(false);\n  };\n\n  const SignOut = () => {\n    setIsLogIn(false);\n    // user sign out\n    authService.signOut();\n    alert(\"로그아웃 되었습니다!\");\n  };\n\n  const isLogedInPost = () => {\n    if (isLogIn) {\n      navigate(\"/item-post\");\n    } else {\n      openModal();\n    }\n  };\n  const isLogedInWish = () => {\n    if (isLogIn) {\n      navigate(\"/wish-post\");\n    } else {\n      openModal();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Header>\n        <Title>Home Manager</Title>\n        {/* <ThemeMode type=\"checkbox\" text=\"a\" /> */}\n      </Header>\n      <BtnBox>\n        {isLogIn ? (\n          <>\n            <span>{userObj.displayName}님, 안녕하세요!</span>\n            <SignBtn onClick={SignOut}>로그아웃</SignBtn>\n            <Link to=\"mypage\">\n              <SignBtn>마이페이지</SignBtn>\n            </Link>\n          </>\n        ) : (\n          <SignBtn onClick={openModal}>로그인</SignBtn>\n        )}\n        <SignForm\n          onModal={onModal}\n          closeModal={closeModal}\n          setIsLogIn={setIsLogIn}\n        />\n      </BtnBox>\n      <ListBox>\n        <LeftBox>\n          <h3>\n            아이템리스트\n            <span>\n              <PostBtn onClick={isLogedInPost}>등록하기</PostBtn>\n            </span>\n          </h3>\n          <MainList>\n            <ItemList userObj={userObj} />\n          </MainList>\n        </LeftBox>\n        <RightBox>\n          <h3>알림</h3>\n          <TopList>\n            <AlarmList userObj={userObj} />\n          </TopList>\n          <h3>\n            위시리스트\n            <span>\n              <PostBtn onClick={isLogedInWish}>등록하기</PostBtn>\n            </span>\n          </h3>\n          <BottomList>\n            <WishList userObj={userObj} />\n          </BottomList>\n        </RightBox>\n      </ListBox>\n    </Wrapper>\n  );\n}\n\nexport default Home;\n"],"names":["modalState","atom","key","default","loginState","userState","itemPostState","category","products","location","purchase","purchaseMethod","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","Wrapper","styled","Header","Title","BtnBox","SignBtn","ListBox","LeftBox","MainList","RightBox","TopList","BottomList","PostBtn","FormBox","Form","CloseBtn","InputBox","Input","ToggleBtn","library","fab","closeModal","setIsLogIn","onSocialClicik","e","target","name","provider","GoogleAuthProvider","signInWithPopup","authService","user","console","log","alert","className","onClick","icon","onModal","useForm","register","handleSubmit","watch","errors","formState","useRecoilState","newUser","setNewUser","useState","errorFromSubmit","setErrorFromSubmit","password","useRef","current","navigate","useNavigate","onSubmit","data","createUserWithEmailAndPassword","email","setPersistence","browserSessionPersistence","signInWithEmailAndPassword","message","type","placeholder","required","pattern","minLength","validate","value","passwordConfirm","prev","userObj","isLogIn","useRecoilValue","getItems","map","it","uid","creatorId","quantity","id","ListContainer","targetId","setTargetId","getWish","setGetWish","useEffect","length","targetWish","find","item","onClickDelete","delWish","doc","db","deleteDoc","filter","wish","style","height","overflow","display","flexDirection","alignItems","justifyContent","width","createDate","marginLeft","marginRight","setGetItems","targetItem","onDelete","delItem","setOnModal","change","setChange","sessionKey","apikey","session","sessionStorage","getItem","getItemData","getDocs","collection","docs","getWishData","openModal","displayName","to"],"sourceRoot":""}