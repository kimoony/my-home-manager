{"version":3,"file":"static/js/667.f5a7826a.chunk.js","mappings":"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","sources":["atoms.js","components/list/AlarmList.js","styles/list/WishList.style.js","components/list/WishList.js","components/list/GetItem.js","components/list/ItemList.js","components/Nav.js","routes/Home.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const modalState = atom({\n  key: \"modalState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { getItemsState, loginState } from \"../../atoms\";\n\nfunction AlarmList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  const getItems = useRecoilValue(getItemsState);\n\n  return (\n    <>\n      {isLogIn\n        ? getItems.map((it) =>\n            userObj.uid === it.creatorId ? (\n              <div key={it.id}>\n                {it.quantity <= 3\n                  ? `${it.products}가 ${it.quantity}개 남았습니다. `\n                  : \"\"}\n              </div>\n            ) : null\n          )\n        : null}\n    </>\n  );\n}\n\nexport default AlarmList;\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  width: 90%;\n  height: 100px;\n  border: 1px solid black;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n`;\n\nexport const LeftBox = styled.div`\n\n`","import React, { useEffect, useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { getWishState, loginState, modalState } from \"../../atoms\";\nimport { ListContainer } from \"../../styles/list/WishList.style\";\nimport { useNavigate } from \"react-router-dom\";\nimport { db } from \"../../firebase\";\nimport { doc, deleteDoc } from \"firebase/firestore\";\n\nfunction WishList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  // const setOnModal = useRecoilState(modalState);\n  const [targetId, setTargetId] = useState({});\n  const [getWish, setGetWish] = useRecoilState(getWishState);\n\n  // console.log(getWish);\n\n  const navigate = useNavigate();\n\n  // const isLogedInWish = () => {\n  //   if (isLogIn) {\n  //     navigate(\"/wish-post\");\n  //   } else {\n  //     setOnModal(true);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (getWish.length > 0) {\n      const targetWish = getWish.find((item) => item.id);\n      if (targetWish) {\n        setTargetId(targetWish);\n      }\n    }\n  }, [getWish]);\n\n  const onClickDelete = async () => {\n    const delWish = doc(db, \"wishItems\", targetId.id);\n    await deleteDoc(delWish);\n    setGetWish(getWish.filter((wish) => wish.id !== targetId.id));\n    alert(\"삭제완료!\");\n  };\n\n  return (\n    <div style={{ height: \"95%\", overflow: \"auto\" }}>\n      {isLogIn ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"60px\",\n          }}\n        >\n          {getWish.length > 0\n            ? getWish.map((wish) =>\n                userObj.uid === wish.creatorId ? (\n                  <ListContainer key={wish.id}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        width: \"100%\",\n                      }}\n                      onClick={() => navigate(`wish-detail/${wish.id}`)}\n                    >\n                      <div>{wish.products}</div>\n                      <div>{wish.price}</div>\n                      <span>{wish.createDate}</span>\n                    </div>\n                    <div>\n                      <button\n                        onClick={onClickDelete}\n                        style={{ marginLeft: \"25px\", marginRight: \"10px\" }}\n                      >\n                        삭제\n                      </button>\n                    </div>\n                  </ListContainer>\n                ) : null\n              )\n            : null}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default WishList;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nfunction GetItem({ item, onDelete }) {\n  const navigate = useNavigate();\n  return (\n    <>\n      <ListContainer key={item.id}>\n        <Item style={{}}>\n          <img src={item.productsImg} alt=\"\" />\n          <div onClick={() => navigate(`item-detail/${item.id}`)}>\n            {item.products}\n          </div>\n          <span>{item.quantity}</span>\n          <span>{item.createDate}</span>\n          <div>\n            <button onClick={onDelete}>\n              <MdDeleteForever />\n            </button>\n          </div>\n        </Item>\n      </ListContainer>\n    </>\n  );\n}\n\nexport default GetItem;\n\nconst ListContainer = styled.section`\n  width: 90%;\n  height: 100px;\n  border-bottom: 2px solid #cbcdd4;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.section`\n  width: 100%;\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(5, 1fr);\n\n  img {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n  }\n\n  button {\n    margin-bottom: 5px;\n    font-size: 23px;\n    border: none;\n    background-color: #fff;\n    color: #d04f4b;\n    cursor: pointer;\n\n    :hover {\n      color: #ee555b;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { getItemsState, loginState } from \"../../atoms\";\nimport { db } from \"../../firebase\";\nimport { doc, deleteDoc } from \"firebase/firestore\";\nimport styled from \"styled-components\";\nimport GetItem from \"./GetItem\";\n\nfunction ItemList({ userObj }) {\n  const isLogIn = useRecoilValue(loginState);\n  const [targetId, setTargetId] = useState({});\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n\n  // id filter\n  useEffect(() => {\n    if (getItems.length > 0) {\n      const targetItem = getItems.find((item) => item.id);\n\n      if (targetItem) {\n        setTargetId(targetItem);\n      }\n    }\n  }, [getItems]);\n\n  const onDelete = async () => {\n    const delItem = doc(db, \"items\", targetId.id);\n    await deleteDoc(delItem);\n    setGetItems(getItems.filter((item) => item.id !== targetId.id));\n    alert(`${targetId.products} 삭제완료!`);\n  };\n\n  return (\n    <Container>\n      {isLogIn ? (\n        <ListBox>\n          {getItems.length > 0 ? (\n            getItems.map((item) =>\n              userObj.uid === item.creatorId ? (\n                <GetItem key={item.id} item={item} onDelete={onDelete} />\n              ) : null\n            )\n          ) : (\n            <p>아이템을 등록해 주세요!</p>\n          )}\n        </ListBox>\n      ) : (\n        <SignGo>\n          <h3>로그인 또는 회원가입 해주세요!</h3>\n        </SignGo>\n      )}\n    </Container>\n  );\n}\n\nexport default ItemList;\n\nconst Container = styled.section`\n  height: 95%;\n  overflow: auto;\n`;\n\nconst ListBox = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 300px;\n`;\n\nconst SignGo = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n","import React from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Nickname = styled.div`\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\n\nconst SignBtn = styled.button`\n  float: right;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  padding: 5px 10px;\n  color: #fff;\n\n  &:first-child {\n    margin-right: 30px;\n    background-color: #d04f4b;\n\n    :hover {\n      background-color: #ee555b;\n    }\n  }\n\n  &:last-child {\n    margin-right: 10px;\n    background-color: #616365;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n\nfunction Nav({ isLogIn, userObj, SignOut }) {\n  const navigate = useNavigate();\n  return (\n    <>\n      {isLogIn ? (\n        <>\n          <Nickname>{userObj.displayName}님, 안녕하세요!</Nickname>\n          <div>\n            <SignBtn onClick={SignOut}>로그아웃</SignBtn>\n            <Link to=\"mypage\">\n              <SignBtn>마이페이지</SignBtn>\n            </Link>\n          </div>\n        </>\n      ) : (\n        <SignBtn onClick={() => navigate(\"/sign\")}>로그인</SignBtn>\n      )}\n    </>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { authService, apikey, db } from \"../firebase\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  getItemsState,\n  getWishState,\n  loginState,\n  changedState,\n} from \"../atoms\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport AlarmList from \"components/list/AlarmList\";\nimport WishList from \"components/list/WishList\";\nimport ItemList from \"components/list/ItemList\";\nimport styled from \"styled-components\";\nimport Nav from \"components/Nav\";\n\nfunction Home({ userObj }) {\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n  const [getWish, setGetWish] = useRecoilState(getWishState);\n  const [isLogIn, setIsLogIn] = useRecoilState(loginState);\n  const [change, setChange] = useRecoilState(changedState);\n\n  const navigate = useNavigate();\n\n  const sessionKey = `firebase:authUser:${apikey}:[DEFAULT]`;\n  const session = sessionStorage.getItem(sessionKey) ? true : false;\n\n  useEffect(() => {\n    const getItemData = async () => {\n      const data = await getDocs(collection(db, \"items\"));\n      setGetItems(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemData();\n    setChange(false);\n  }, [change, getItems]);\n\n  useEffect(() => {\n    const getWishData = async () => {\n      const data = await getDocs(collection(db, \"wishItems\"));\n      setGetWish(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getWishData();\n    setChange(false);\n  }, [change, getWish]);\n\n  useEffect(() => {\n    if (session === true && userObj !== null) {\n      setIsLogIn(true);\n    }\n  }, [userObj, session, setIsLogIn]);\n\n  const SignOut = () => {\n    setIsLogIn(false);\n    // user sign out\n    authService.signOut();\n    alert(\"로그아웃 되었습니다!\");\n  };\n\n  const isLogedInPost = () => {\n    if (isLogIn) {\n      navigate(\"/item-post\");\n    } else {\n      navigate(\"/sign\");\n    }\n  };\n  const isLogedInWish = () => {\n    if (isLogIn) {\n      navigate(\"/wish-post\");\n    } else {\n      navigate(\"/sign\");\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Header>\n        <Title>Home Manager</Title>\n        {/* <ThemeMode type=\"checkbox\" text=\"a\" /> */}\n      </Header>\n      <NavBox>\n        <Nav isLogIn={isLogIn} SignOut={SignOut} userObj={userObj} />\n      </NavBox>\n      <ListContainer>\n        <LeftBox>\n          <Subtitle>\n            아이템리스트\n            <div>\n              <PostBtn onClick={isLogedInPost}>등록하기</PostBtn>\n            </div>\n          </Subtitle>\n          <MainList>\n            <ItemList userObj={userObj} />\n          </MainList>\n        </LeftBox>\n        <RightBox>\n          <Subtitle>알림</Subtitle>\n          <TopList>\n            <AlarmList userObj={userObj} />\n          </TopList>\n          <Subtitle>\n            위시리스트\n            <span>\n              <PostBtn onClick={isLogedInWish}>등록하기</PostBtn>\n            </span>\n          </Subtitle>\n          <BottomList>\n            <WishList userObj={userObj} />\n          </BottomList>\n        </RightBox>\n      </ListContainer>\n    </Wrapper>\n  );\n}\n\nexport default Home;\n\n// styled-components\n\nconst Wrapper = styled.section`\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n`;\n\n// const ThemeMode = styled.input``;\n\nconst NavBox = styled.section`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 20px;\n  padding-left: 20px;\n`;\n\nconst ListContainer = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst LeftBox = styled.section`\n  width: 100%;\n  height: 505px;\n  margin-right: 10px;\n  button {\n    margin-top: 5px;\n    float: right;\n    margin-right: 10px;\n  }\n`;\n\nconst MainList = styled.section`\n  width: 95%;\n  height: 100%;\n  border: 1px solid red;\n  padding: 10px 15px;\n  border-radius: 10px;\n`;\n\nconst RightBox = styled.section`\n  width: 70vw;\n  height: 400px;\n  margin-right: 50px;\n  margin-top: 7px;\n\n  button {\n    margin-top: 5px;\n    float: right;\n    margin-right: -15px;\n  }\n`;\n\nconst TopList = styled.section`\n  width: 100%;\n  height: 40%;\n  padding: 10px;\n  margin-top: 25px;\n  border: 1px solid blue;\n  border-radius: 10px;\n`;\n\nconst BottomList = styled.section`\n  width: 100%;\n  height: 62.3%;\n  padding: 10px;\n  border: 1px solid green;\n  border-radius: 10px;\n`;\n\nconst PostBtn = styled.button`\n  border: none;\n  border-radius: 5px;\n  background-color: #2986f5;\n  color: #fff;\n  padding: 5px 10px;\n  cursor: pointer;\n  margin-bottom: 5px;\n`;\n"],"names":["loginState","atom","key","default","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","userObj","isLogIn","useRecoilValue","getItems","map","it","uid","creatorId","quantity","id","ListContainer","styled","useState","targetId","setTargetId","useRecoilState","getWish","setGetWish","navigate","useNavigate","useEffect","length","targetWish","find","item","onClickDelete","delWish","doc","db","deleteDoc","filter","wish","alert","style","height","overflow","display","flexDirection","alignItems","justifyContent","width","onClick","createDate","marginLeft","marginRight","onDelete","Item","src","productsImg","alt","setGetItems","targetItem","delItem","Container","ListBox","SignGo","Nickname","SignBtn","SignOut","displayName","to","setIsLogIn","change","setChange","sessionKey","apikey","session","sessionStorage","getItem","getItemData","getDocs","collection","data","docs","getWishData","Wrapper","Header","Title","NavBox","authService","Subtitle","PostBtn","MainList","RightBox","TopList","BottomList","LeftBox"],"sourceRoot":""}