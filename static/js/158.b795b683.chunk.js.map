{"version":3,"file":"static/js/158.b795b683.chunk.js","mappings":"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","sources":["atoms.js","components/form/editInput/ItemEditForm.js","routes/ItemEdit.js","components/post/ItemImage.js","components/AddNewCateg.js","components/form/postInput/ItemInputForm.js","routes/ItemPost.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const editState = atom({\n  key: \"editState\",\n  default: false,\n});\n\nexport const loginState = atom({\n  key: \"loginState\",\n  default: false,\n});\n\nexport const userState = atom({\n  key: \"userState\",\n  default: false,\n});\n\nexport const itemPostState = atom({\n  key: \"itemPostState\",\n  default: {\n    products: \"\",\n    location: \"\",\n    purchase: \"\",\n    descript: \"\",\n    createdAt: \"\",\n  },\n});\n\nexport const quantityState = atom({\n  key: \"quantityState\",\n  default: 0,\n});\n\nexport const wishPostState = atom({\n  key: \"wishPostState\",\n  default: {\n    products: \"\",\n    price: 0,\n    descript: \"\",\n  },\n});\n\nexport const changedState = atom({\n  key: \"changedState\",\n  default: false,\n});\n\nexport const getItemsState = atom({\n  key: \"getItemsState\",\n  default: [],\n});\n\nexport const getWishState = atom({\n  key: \"getWishState\",\n  default: [],\n});\n\nexport const itemCategoryState = atom({\n  key: \"itemCategoryState\",\n  default: [],\n});\n\nexport const methodCategoryState = atom({\n  key: \"methodCategoryState\",\n  default: [\n    {\n      key: 0,\n      value: \"온라인\",\n    },\n    {\n      key: 1,\n      value: \"오프라인\",\n    },\n    {\n      key: 2,\n      value: \"기타\",\n    },\n  ],\n});\n","import React, { useEffect } from \"react\";\nimport { itemCategoryState, methodCategoryState } from \"atoms\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoBack } from \"routes/ItemPost\";\n\nfunction ItemEditForm({\n  item,\n  setItem,\n  itemCategValue,\n  onChangeICateg,\n  methodCategValu,\n  onChangeMCateg,\n}) {\n  const [itemCategory, setItemCategory] = useRecoilState(itemCategoryState);\n  const methodCategory = useRecoilValue(methodCategoryState);\n\n  console.log(methodCategory);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getItemCategData = async () => {\n      const data = await getDocs(collection(db, \"itemCateg\"));\n      setItemCategory(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemCategData();\n  }, [setItemCategory, itemCategory]);\n\n  console.log(itemCategory);\n\n  const onChangeValue = (e) => {\n    setItem({\n      ...item,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <h1>수정페이지</h1>\n      <div>\n        <label>물품명: </label>\n        <input name=\"products\" value={item.products} onChange={onChangeValue} />\n      </div>\n      <div>\n        <label>카테고리: </label>\n        <select value={itemCategValue} onChange={onChangeICateg}>\n          {itemCategory.map((categ) => (\n            <option value={categ.category}>{categ.category}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label>수량: </label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          value={item.quantity}\n          onChange={onChangeValue}\n        />\n      </div>\n      <div>\n        <label>보관위치: </label>\n        <input\n          name=\"storageLocation\"\n          value={item.storageLocation}\n          onChange={onChangeValue}\n        />\n      </div>\n      <div>\n        <label>구매처: </label>\n        <input name=\"purchase\" value={item.purchase} onChange={onChangeValue} />\n      </div>\n      <div>\n        <label>구매방법: </label>\n        <select value={methodCategValu} onChange={onChangeMCateg}>\n          {methodCategory.map((method) => (\n            <option value={method.value}>{method.value}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label>설명: </label>\n        <textarea\n          name=\"descript\"\n          value={item.descript}\n          onChange={onChangeValue}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Update</button>\n        <GoBack onClick={() => navigate(-1)}>뒤로가기</GoBack>\n      </div>\n    </>\n  );\n}\n\nexport default ItemEditForm;\n","import { getItemsState } from \"atoms\";\nimport { db } from \"../firebase\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport ItemEditForm from \"components/form/editInput/ItemEditForm\";\n\nfunction ItemEdit() {\n  const [targetId, setTargetId] = useState({});\n  const [getItems, setGetItems] = useRecoilState(getItemsState);\n\n  const [itemCategValue, setItemCategValue] = useState(targetId.category);\n  const [methodCategValue, setMethodCategValue] = useState(\n    targetId.purchaseMethod\n  );\n\n  const onChangeICateg = (e) => {\n    setItemCategValue(e.target.value);\n  };\n  const onChangeMCateg = (e) => {\n    setMethodCategValue(e.target.value);\n  };\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (getItems.length > 0) {\n      const targetItem = getItems.find((item) => item.id === id);\n      console.log(targetItem);\n      if (targetItem) {\n        setTargetId(targetItem);\n      }\n    }\n  }, [getItems, id]);\n\n  const onUpdateItem = async (e) => {\n    e.preventDefault();\n    const editRef = doc(db, \"items\", targetId.id);\n    try {\n      await updateDoc(editRef, {\n        ...targetId,\n        category: itemCategValue,\n        purchaseMethod: methodCategValue,\n      });\n      console.log(editRef.id);\n\n      alert(\"수정이 완료되었습니다.\");\n      navigate(`/item-detail/${targetId.id}`);\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      console.log(\"End\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onUpdateItem}>\n        <ItemEditForm\n          item={targetId}\n          setItem={setTargetId}\n          itemCategValue={itemCategValue}\n          methodCategValue={methodCategValue}\n          onChangeICateg={onChangeICateg}\n          onChangeMCateg={onChangeMCateg}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default ItemEdit;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction ItemImage({ setFile, percent, image, uploadImage }) {\n  // const [isEdit, setIsEdit] = useRecoilState(editState);\n\n  const handleChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  return (\n    <Wrapper>\n      <SelectImgBtn type=\"file\" accept=\"image/*\" onChange={handleChange} />\n      <UploadBox>\n        <input type=\"button\" value=\"업로드\" onClick={uploadImage} />\n        <span>{percent} \"% 완료\"</span>\n      </UploadBox>\n    </Wrapper>\n  );\n}\n\nexport default ItemImage;\n\nconst Wrapper = styled.div`\n  width: 330px;\n`;\n\nconst SelectImgBtn = styled.input`\n  margin-bottom: 5px;\n`;\n\nconst UploadBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  input {\n    border: none;\n    padding: 5px 10px;\n    background-color: #616365;\n    color: #fff;\n    border-radius: 10px;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nfunction AddNewCateg({\n  viewInput,\n  setViewInput,\n  itemCategory,\n  addCateg,\n  removeCateg,\n  setNewCateg,\n}) {\n  const [showCateg, setShowCateg] = useState(false);\n\n  const onClickAdd = () => {\n    setViewInput(true);\n  };\n\n  const onChangeCateg = (e) => {\n    setNewCateg(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <label>카테고리 </label>\n      {viewInput ? null : (\n        <>\n          <Btn type=\"button\" value=\"+\" onClick={onClickAdd} />\n          <Btn\n            type=\"button\"\n            value=\"-\"\n            onClick={() => setShowCateg(!showCateg)}\n          />\n        </>\n      )}\n      {viewInput ? (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input type=\"text\" onChange={onChangeCateg} name=\"newCategory\" />\n          <button type=\"button\" onClick={addCateg}>\n            추가\n          </button>\n          <button type=\"button\" onClick={() => setViewInput(false)}>\n            취소\n          </button>\n        </div>\n      ) : showCateg ? (\n        itemCategory.map((categ) => (\n          <div key={categ.id}>\n            <div>{categ.category}</div>\n            <span onClick={removeCateg}>\n              <MdDeleteForever />\n            </span>\n          </div>\n        ))\n      ) : null}\n    </Wrapper>\n  );\n}\n\nexport default AddNewCateg;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Btn = styled.input`\n  font-size: 18px;\n  border-radius: 50%;\n  background-color: #667078;\n  color: #fff;\n  border: none;\n  margin-top: 5px;\n  width: 20px;\n  height: 20px;\n  padding: 0px;\n\n  :hover {\n    background-color: #616365;\n  }\n  :last-child {\n    margin-left: 2px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport ItemImage from \"../../post/ItemImage\";\nimport AddNewCateg from \"../../AddNewCateg\";\nimport styled from \"styled-components\";\nimport {\n  itemPostState,\n  quantityState,\n  itemCategoryState,\n  methodCategoryState,\n} from \"atoms\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { db } from \"../../../firebase\";\nimport { useEffect } from \"react\";\n\nfunction ItemInputList({\n  register,\n  errors,\n  percent,\n  setFile,\n  userObj,\n  categoryValue,\n  setCatagoryValue,\n  methodValue,\n  setMethodValue,\n  uploadImage,\n}) {\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [viewInput, setViewInput] = useState(false);\n  const [newCateg, setNewCateg] = useState(\"\");\n  const [itemCategory, setItemCategory] = useRecoilState(itemCategoryState);\n  const [targetCateg, setTargetCateg] = useState({});\n\n  const methodCategory = useRecoilValue(methodCategoryState);\n\n  useEffect(() => {\n    const getItemCategData = async () => {\n      const data = await getDocs(collection(db, \"itemCateg\"));\n      setItemCategory(\n        data.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }))\n      );\n    };\n    getItemCategData();\n  }, [setItemCategory, itemCategory]);\n\n  useEffect(() => {\n    if (itemCategory.length > 0) {\n      const targetC = itemCategory.find((item) => item.id);\n\n      if (targetC) {\n        setTargetCateg(targetC);\n      }\n    }\n  }, [itemCategory]);\n\n  const changeValue = (e) => {\n    setItemsValue({\n      ...itemsValue,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const categChange = (e) => {\n    setCatagoryValue(e.target.value);\n  };\n\n  const methodChange = (e) => {\n    setMethodValue(e.target.value);\n  };\n\n  const addCateg = async () => {\n    try {\n      const categRef = await addDoc(collection(db, \"itemCateg\"), {\n        category: newCateg,\n        creatorId: userObj.uid,\n      });\n      console.log(categRef.id);\n      setItemCategory([...itemCategory, newCateg]);\n      setViewInput(false);\n      alert(\"추가 완료!\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const removeCateg = async () => {\n    const delItemCateg = doc(db, \"itemCateg\", targetCateg.id);\n    await deleteDoc(delItemCateg);\n    setItemCategory(\n      itemCategory.filter((categ) => categ.id !== targetCateg.id)\n    );\n    alert(\"삭제\");\n  };\n\n  const addQuantity = () => {\n    setQuantity(() => Number(quantity + 1));\n  };\n  const minusQuantity = () => {\n    if (quantity > 0) {\n      setQuantity(() => Number(quantity - 1));\n    }\n  };\n\n  return (\n    <Container>\n      <Image>\n        <ItemImage\n          percent={percent}\n          setFile={setFile}\n          uploadImage={uploadImage}\n        />\n      </Image>\n      <Ctag>\n        <AddNewCateg\n          viewInput={viewInput}\n          setViewInput={setViewInput}\n          itemCategory={itemCategory}\n          addCateg={addCateg}\n          removeCateg={removeCateg}\n          setNewCateg={setNewCateg}\n        />\n        <select value={categoryValue} onChange={categChange}>\n          <option value=\"none\"> 선택 </option>\n          {itemCategory.map((categ) => (\n            <option key={categ.id} value={categ.category}>\n              {categ.category}\n            </option>\n          ))}\n        </select>\n      </Ctag>\n      <ItemName>\n        <label>물품명 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          name=\"products\"\n          value={itemsValue.products}\n        />\n      </ItemName>\n      <Quantity>\n        <label>수량 </label>\n        <NumInput>\n          <button type=\"button\" onClick={minusQuantity}>\n            -\n          </button>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={changeValue}\n            name=\"quantity\"\n          />\n          <button type=\"button\" onClick={addQuantity}>\n            +\n          </button>\n        </NumInput>\n      </Quantity>\n      <StorageLocation>\n        <label>보관위치 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.location}\n          name=\"location\"\n        />\n      </StorageLocation>\n      <Purchase>\n        <label>구매처/구매방법 </label>\n        <input\n          type=\"text\"\n          onChange={changeValue}\n          value={itemsValue.purchase}\n          name=\"purchase\"\n        />\n        <select onChange={methodChange} value={methodValue}>\n          {methodCategory.map((method) => (\n            <option key={method.key} value={method.value}>\n              {method.value}\n            </option>\n          ))}\n        </select>\n      </Purchase>\n      <Description>\n        <label>설명 </label>\n        <textarea\n          cols=\"30\"\n          rows=\"10\"\n          onChange={changeValue}\n          value={itemsValue.descript}\n          name=\"descript\"\n        />\n      </Description>\n    </Container>\n  );\n}\n\nexport default ItemInputList;\n\nconst Container = styled.div`\n  width: 50vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 10px 0px;\n\n  label {\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin: 5px 0px;\n  }\n`;\n\nconst Image = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Ctag = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  select {\n    margin-top: 10px;\n    text-align: center;\n    border-radius: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 5px 0px;\n  }\n  label {\n    margin-right: 10px;\n  }\n`;\n\nconst ItemName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  width: 320px;\n\n  input {\n    padding: 5px 0;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\n\nconst Quantity = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    border-radius: 10px;\n  }\n\n  button {\n    border: none;\n    border-radius: 50%;\n    background-color: #616365;\n    font-weight: bold;\n    color: #fff;\n    padding: 0px 10px;\n\n    :hover {\n      background-color: #667078;\n    }\n  }\n`;\n\nconst NumInput = styled.div`\n  width: 320px;\n  display: flex;\n\n  input {\n    width: 290px;\n    text-align: center;\n    margin: 0px 10px;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\n\nconst StorageLocation = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n`;\nconst Purchase = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  input {\n    padding: 5px 0;\n    margin-bottom: 5px;\n    padding-left: 10px;\n    border-radius: 10px;\n  }\n\n  select {\n    margin-top: 10px;\n    text-align: center;\n    border-radius: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 5px 0px;\n  }\n`;\nconst Description = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  textarea {\n    border-radius: 10px;\n    padding-left: 10px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { db, storage } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport ItemInputForm from \"components/form/postInput/ItemInputForm\";\nimport { useRecoilState } from \"recoil\";\nimport { itemPostState, quantityState } from \"../atoms\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport styled from \"styled-components\";\n\nfunction ItemPost({ userObj }) {\n  // 이미지\n  const [file, setFile] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [percent, setPercent] = useState(0);\n  const [itemsValue, setItemsValue] = useRecoilState(itemPostState);\n  const [quantity, setQuantity] = useRecoilState(quantityState);\n\n  const [categoryValue, setCatagoryValue] = useState(\"\");\n  const [methodValue, setMethodValue] = useState(\"온라인\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const navigate = useNavigate();\n\n  const uploadImage = () => {\n    if (!file) {\n      alert(\"이미지를 선택하세요!\");\n      return;\n    }\n\n    const storageRef = ref(storage, `/files/${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        setPercent(percent);\n      },\n      (err) => console.log(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          setImgUrl(url);\n        });\n      }\n    );\n\n    if (percent === 100) {\n      alert(\"이미 업로드 완료\");\n      console.log(imgUrl);\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      if (percent === 100) {\n        const docRef = await addDoc(collection(db, \"items\"), {\n          creatorId: userObj.uid,\n          category: categoryValue,\n          products: itemsValue.products,\n          quantity: quantity,\n          storageLocation: itemsValue.location,\n          purchase: itemsValue.purchase,\n          purchaseMethod: methodValue,\n          descript: itemsValue.descript,\n          createDate: moment().format(\"YYYY-MM-DD\"),\n          productsImg: imgUrl,\n        });\n        console.log(docRef.id);\n\n        setItemsValue({\n          products: \"\",\n          location: \"\",\n          purchase: \"\",\n          descript: \"\",\n          createdAt: \"\",\n        });\n        setQuantity(0);\n        navigate(\"/\");\n        alert(\"등록이 완료되었습니다.\");\n      } else {\n        alert(\"사진을 업로드 하세요\");\n        return;\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Header>\n          <h1>물품 등록하기</h1>\n        </Header>\n        <Main>\n          <ItemInputForm\n            register={register}\n            errors={errors}\n            percent={percent}\n            setFile={setFile}\n            userObj={userObj}\n            categoryValue={categoryValue}\n            setCatagoryValue={setCatagoryValue}\n            methodValue={methodValue}\n            setMethodValue={setMethodValue}\n            uploadImage={uploadImage}\n          />\n        </Main>\n        <Footer>\n          <Link to=\"/\">\n            <GoBack>뒤로가기</GoBack>\n          </Link>\n          <PostBtn type=\"submit\" value=\"등록하기\" />\n        </Footer>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ItemPost;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  width: 90vw;\n  height: 90vh;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n`;\n\nconst PostBtn = styled.input`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #2986f5;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const GoBack = styled.button`\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #f9567a;\n  color: #fff;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n"],"names":["editState","atom","key","default","loginState","userState","itemPostState","products","location","purchase","descript","createdAt","quantityState","wishPostState","price","changedState","getItemsState","getWishState","itemCategoryState","methodCategoryState","value","item","setItem","itemCategValue","onChangeICateg","methodCategValu","onChangeMCateg","useRecoilState","itemCategory","setItemCategory","methodCategory","useRecoilValue","console","log","navigate","useNavigate","useEffect","getItemCategData","getDocs","collection","db","data","docs","map","doc","id","onChangeValue","e","target","name","onChange","categ","category","type","quantity","storageLocation","method","GoBack","onClick","useState","targetId","setTargetId","getItems","setItemCategValue","purchaseMethod","methodCategValue","setMethodCategValue","useParams","length","targetItem","find","onUpdateItem","preventDefault","editRef","updateDoc","alert","error","message","onSubmit","setFile","percent","uploadImage","image","Wrapper","SelectImgBtn","accept","event","files","UploadBox","styled","viewInput","setViewInput","addCateg","removeCateg","setNewCateg","showCateg","setShowCateg","Btn","style","display","alignItems","register","errors","userObj","categoryValue","setCatagoryValue","methodValue","setMethodValue","itemsValue","setItemsValue","setQuantity","newCateg","targetCateg","setTargetCateg","targetC","changeValue","addDoc","creatorId","uid","categRef","delItemCateg","deleteDoc","filter","Container","Image","Ctag","ItemName","Quantity","NumInput","Number","StorageLocation","Purchase","Description","cols","rows","file","imgUrl","setImgUrl","setPercent","useForm","handleSubmit","formState","createDate","moment","format","productsImg","docRef","Form","Header","Main","ItemInputForm","storageRef","ref","storage","uploadTask","uploadBytesResumable","on","snapshot","Math","round","bytesTransferred","totalBytes","err","getDownloadURL","then","url","Footer","to","PostBtn"],"sourceRoot":""}